{"version":3,"sources":["components/RuleList.js","pages/Rules.js","components/CreateUpdateRuleForm.js","pages/CreateUpdateRule.js","context/UserContext.js","pages/Users.js","components/RegionSelector.js","components/CountrySelector.js","components/MarketSelector.js","components/IssuerSegmentationSelector.js","components/LangSelector.js","components/CreateUpdateUserForm.js","pages/CreateUpdateUser.js","pages/Contents.js","pages/ConfigureContentRules.js","pages/SimulateUserSession.js","App.js","index.js"],"names":["RuleList","region","lazy","search","clickAction","useState","rules","setRules","keyword","setKeyword","loading","setLoading","history","useHistory","useEffect","colorMaps","length","a","url","process","params","regions","Axios","get","data","message","error","flex","style","padding","background","size","allowClear","placeholder","value","onChange","e","target","active","paragraph","rows","marginTop","map","item","onClick","_id","push","key","bordered","width","hoverable","display","title","fontSize","color","conditionMatchType","conditions","condition","attribute","RightCircleOutlined","inValues","index","Title","Typography","Rules","type","level","strong","PlusOutlined","Text","Option","Select","CreateUpdateRuleForm","filteredData","setTitle","matchType","setMatchType","selectedRegions","setSelectedRegions","selectedMarkets","setSelectedMarkets","selectedCountries","setSelectedCountries","selectedLanguages","setSelectedLanguages","selectedIssuerSegmentations","setSelectedIssuerSegmentations","mode","filterOption","optionFilterProp","optionLabelProp","label","Group","options","optionType","buttonStyle","markets","values","issuerSegmentations","countries","languages","CreateUpdateRule","useParams","submitting","setSubmitting","setData","setFilteredData","init","initFormData","rule","langCondition","find","marketCondition","segCondition","countryCondition","filter","indexOf","onRegionSelect","country","onCountrySelect","handleSubmit","body","put","success","post","className","onBack","subTitle","spinning","float","disabled","UserContext","React","createContext","userListReducer","state","payload","user","UserProvider","children","setUser","useReducer","userList","dispatchUserListAction","Provider","Users","useContext","to","shape","src","image","name","lang","market","issuerSegmentation","avatar","RegionSelector","setRegion","setRegions","CountrySelector","setCountry","setCountries","MarketSelector","setMarket","setMarkets","IssuerSegmentationSelector","setIssuerSegmentation","setIssuerSegmentations","LangSelector","setLang","langs","setLangs","CreateUpdateUserForm","props","setName","prefix","UserOutlined","CreateUpdateUser","span","Contents","showCreateModal","setShowCreateModal","showUpdateModal","setShowUpdateModal","contents","setContents","contentTitle","setContentTitle","currentContent","setCurrentContent","handleCreate","handleUpdate","updated","content","actions","SettingOutlined","EditOutlined","visible","okText","onOk","onCancel","ConfigureContentRules","setContent","updatingRules","setUpdatingRules","setSearch","setLazy","onRuleSelect","newRuleId","ruleIds","warn","onRuleRemove","ruleToRemove","updateRuleMatchType","ruleMatchType","extra","minHeight","orientation","dataSource","renderItem","Item","icon","DeleteOutlined","FundViewOutlined","status","checkedChildren","unCheckedChildren","height","overflowY","SimulateUserSession","textAlign","showSearch","input","option","toLowerCase","selected","gutter","Header","Layout","Content","Footer","App","localStorage","getItem","accepted","setAccepted","notification","warning","duration","description","setItem","onClose","location","useLocation","theme","selectedKeys","pathname","UsergroupAddOutlined","ScheduleOutlined","PicLeftOutlined","LoginOutlined","href","GithubOutlined","backgroundColor","path","paddingTop","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.34211d38.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Axios from 'axios';\nimport { message, Row, Col, Skeleton, Card, Tag, Input } from 'antd';\nimport { RightCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nconst RuleList = ({ region, lazy = false, search, clickAction=null }) => {\n  const [rules, setRules] = useState();\n  const [keyword, setKeyword] = useState();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (search) {\n      setKeyword(search)\n    }\n  }, [search])\n  const colorMaps = {\n    'country': 'orange',\n    'lang': 'green',\n    'market': 'blue',\n    'issuerSegmentation': 'purple'\n  }\n  useEffect(() => {\n    if (!lazy || (lazy && keyword && keyword.length > 2)) {\n      (async () => {\n        let url = `${process.env.REACT_APP_API_URL}/rules`;\n        let params = {};\n        if (region) {\n          params.regions = region\n        }\n        if (keyword) {\n          params.keyword = keyword\n        }\n        try {\n          setLoading(true)\n          const { data } = await Axios.get(url, { params: params });\n          setRules(data)\n          setLoading(false)\n        } catch (e) {\n          setLoading(false)\n          message.error(e.message, 3)\n        }\n      })()\n    }\n  }, [region, lazy, keyword]);\n  const handleClick = (_id) => {\n    if (clickAction) {\n      clickAction(_id)\n    } else {\n      history.push('/rules/update/'+_id)\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          {\n            lazy\n              ? <Input size=\"large\" allowClear placeholder=\"Type something...\" value={keyword} onChange={e => setKeyword(e.target.value)} />\n              : ''\n          }\n            {\n              loading ?\n                <>\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                </>\n                : ''\n            }\n            <div style={{ marginTop: 20 }}>\n              {\n                rules && !loading\n                  ? rules.map(\n                    item => <Card onClick={()=> handleClick(item._id)} key={item._id} bordered style={{ width: '100%', marginTop: 20 }}\n                      hoverable>\n                      <Row>\n                        <Col flex=\"1\">\n                          <h2 style={{ display: 'inline-block' }}>\n                            {item.title}\n                          </h2>\n                        </Col>\n                        <Col flex=\"4\">\n                          <Tag style={{ fontSize: 20 }} color=\"gold\">Match Type : <strong>{item.conditionMatchType}</strong></Tag>\n                          <Tag style={{ fontSize: 20 }} color=\"magenta\">REGIONS : <strong>{item.regions.map(region => ' ' + region.title)}</strong></Tag>\n                          {\n                            item.conditions.map((condition) => {\n                              return <Tag style={{ fontSize: 20 }} key={condition.attribute} color={colorMaps[condition.attribute]}>\n                                {condition.attribute}  <RightCircleOutlined />\n                                <strong>\n                                  {condition.inValues.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                                </strong>\n                              </Tag>\n                            })\n                          }\n                        </Col>\n                      </Row>\n\n                    </Card>\n                  )\n                  : ''\n              }\n            </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default RuleList\n","import React from 'react'\nimport { Row, Col, Typography, Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nimport RuleList from '../components/RuleList';\nconst { Title } = Typography;\n\nconst Rules = () => {\n  const history = useHistory()\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Rules</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/rules/create')}>\n            <PlusOutlined /> Create Rule\n          </Button>\n          <RuleList></RuleList>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Rules\n","import React from 'react'\nimport { Skeleton, Typography, Input, Select, Radio } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\n\nconst CreateUpdateRuleForm = ({\n  loading,\n  data,\n  filteredData,\n  title, setTitle,\n  matchType, setMatchType,\n  selectedRegions, setSelectedRegions,\n  selectedMarkets, setSelectedMarkets,\n  selectedCountries, setSelectedCountries,\n  selectedLanguages, setSelectedLanguages,\n  selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n}) => {\n\n  return (\n    <>\n      {\n        loading\n          ? <Skeleton active paragraph={{ rows: 12 }} />\n          : ''\n      }\n      {data\n        ? <>\n          <Text type=\"primary\" strong>Title</Text>\n          <Input style={{ width: '100%' }} value={title} onChange={e => setTitle(e.target.value)} size=\"large\" placeholder=\"Enter Title\" />\n          <br />\n          <Text type=\"primary\" strong>Available in Regions</Text>\n          <Select\n            value={selectedRegions}\n            onChange={regions => setSelectedRegions(regions)}\n            mode=\"multiple\"\n            size=\"large\"\n            filterOption\n            optionFilterProp=\"label\"\n            placeholder=\"Select Regions\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              data.regions.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <h3 style={{marginTop: \"10px\"}}>Configure Conditions</h3>\n          <Text type=\"primary\" strong>Match Type</Text>\n          <br />\n          <Radio.Group\n            options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n            onChange={e=> setMatchType(e.target.value)}\n            value={matchType}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n          <br />\n          <Text type=\"primary\" strong>Markets</Text>\n          <Select\n            value={selectedMarkets}\n            onChange={(markets) => setSelectedMarkets(markets)}\n            mode=\"multiple\"\n            filterOption\n            optionFilterProp=\"label\"\n            size=\"large\"\n            placeholder=\"Select Markets\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.markets && filteredData.markets.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Issuer Segmentations</Text>\n          <Select\n            value={selectedIssuerSegmentations}\n            onChange={values => setSelectedIssuerSegmentations(values)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Segmentations\"\n            style={{ width: '100%' }}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.issuerSegmentations && filteredData.issuerSegmentations.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Countries</Text>\n          <Select\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Countries\"\n            style={{ width: '100%' }}\n            value={selectedCountries}\n            onChange={countries => setSelectedCountries(countries)}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.countries && filteredData.countries.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Languages</Text>\n          <Select\n            value={selectedLanguages}\n            onChange={languages => setSelectedLanguages(languages)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Languages\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n            filterOption\n            optionFilterProp=\"label\"\n          >\n            {\n              filteredData && filteredData.languages && filteredData.languages.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n        </>\n        : ''\n      }\n    </>\n  )\n}\n\nexport default CreateUpdateRuleForm\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { message, Row, Col, Card, Space, Button, Spin, PageHeader } from 'antd';\nimport CreateUpdateRuleForm from '../components/CreateUpdateRuleForm';\nimport { useHistory, useParams } from 'react-router';\n\nconst CreateUpdateRule = () => {\n  const history = useHistory()\n  const { _id } = useParams()\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setData] = useState();\n  const [filteredData, setFilteredData] = useState({});\n  const [selectedRegions, setSelectedRegions] = useState([]);\n  const [selectedMarkets, setSelectedMarkets] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedIssuerSegmentations, setSelectedIssuerSegmentations] = useState([]);\n  const [title, setTitle] = useState();\n  const [matchType, setMatchType] = useState('ALL');\n  const init = async () => {\n    setLoading(true);\n    try {\n      const { data: regions } = await Axios.get(`${process.env.REACT_APP_API_URL}/regions`);\n      const { data: markets } = await Axios.get(`${process.env.REACT_APP_API_URL}/markets`);\n      const { data: issuerSegmentations } = await Axios.get(`${process.env.REACT_APP_API_URL}/issuer-segmentations`);\n      const { data: countries } = await Axios.get(`${process.env.REACT_APP_API_URL}/countries`);\n      const { data: languages } = await Axios.get(`${process.env.REACT_APP_API_URL}/languages`);\n      setData({ regions, markets, issuerSegmentations, countries, languages })\n      if (_id) {\n        initFormData()\n      }\n      setLoading(false)\n    } catch (e) {\n      setLoading(false)\n      message.error(e.message, 3)\n    }\n\n  }\n  const initFormData = async () => {\n    const { data: rule } = await Axios.get(`${process.env.REACT_APP_API_URL}/rules/${_id}`);\n    setTitle(rule.title);\n    setMatchType(rule.conditionMatchType);\n    const langCondition = rule.conditions.find(condition => condition.attribute === 'lang')\n    if (langCondition) {\n      setSelectedLanguages(langCondition.inValues)\n    }\n    const marketCondition = rule.conditions.find(condition => condition.attribute === 'market')\n    if (marketCondition) {\n      setSelectedMarkets(marketCondition.inValues)\n    }\n    const segCondition = rule.conditions.find(condition => condition.attribute === 'issuerSegmentation')\n    if (segCondition) {\n      setSelectedIssuerSegmentations(segCondition.inValues)\n    }\n    const countryCondition = rule.conditions.find(condition => condition.attribute === 'country')\n    if (countryCondition) {\n      setSelectedCountries(countryCondition.inValues)\n    }\n    setSelectedRegions(rule.regions);\n  }\n  const onRegionSelect = () => {\n    if (data) {\n      const markets = data.markets.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const issuerSegmentations = data.issuerSegmentations.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const countries = data.countries.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      // clear selected data for dependent fields\n      setSelectedMarkets(selectedMarkets.filter(value => {\n        const target = data.markets.find(item => item._id === value)\n        return selectedRegions.indexOf(target.region) !== -1\n      }))\n      setSelectedIssuerSegmentations(selectedIssuerSegmentations.filter(\n        value => {\n          const target = data.issuerSegmentations.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      setSelectedCountries(selectedCountries.filter(\n        value => {\n          const target = data.countries.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      // following data will be used for showing filtered data in select options\n      setFilteredData({ markets, issuerSegmentations, countries })\n    }\n  }\n  const onCountrySelect = () => {\n    if (data) {\n      // clear selected data for dependent fields\n      setSelectedLanguages(selectedLanguages.filter(\n        value => {\n          const target = data.languages.find(item => item._id === value)\n          return selectedCountries.indexOf(target.country) !== -1\n        }\n      ))\n      // filter languages to show in options\n      const languages = data.languages.filter(({ country }) => selectedCountries.indexOf(country) !== -1)\n      setFilteredData({ ...filteredData, languages })\n    }\n  }\n  useEffect(() => {\n    init()\n  }, [])\n\n  useEffect(() => {\n    if (selectedRegions) {\n      onRegionSelect()\n    }\n  }, [selectedRegions])\n\n  useEffect(() => {\n    if (selectedCountries) {\n      onCountrySelect()\n    }\n  }, [selectedCountries])\n\n  const handleSubmit = async () => {\n    setSubmitting(true)\n    const body = {\n      title,\n      regions: selectedRegions,\n      conditionMatchType: matchType,\n      conditions: []\n    }\n    if (selectedMarkets && selectedMarkets.length > 0) {\n      body.conditions.push({\n        attribute: 'market',\n        inValues: selectedMarkets\n      })\n    }\n    if (selectedCountries && selectedCountries.length > 0) {\n      body.conditions.push({\n        attribute: 'country',\n        inValues: selectedCountries\n      })\n    }\n    if (selectedLanguages && selectedLanguages.length > 0) {\n      body.conditions.push({\n        attribute: 'lang',\n        inValues: selectedLanguages\n      })\n    }\n    if (selectedIssuerSegmentations && selectedIssuerSegmentations.length > 0) {\n      body.conditions.push({\n        attribute: 'issuerSegmentation',\n        inValues: selectedIssuerSegmentations\n      })\n    }\n    if (!body.conditions || body.conditions.length === 0) {\n      message.error('Rules without conditions have no significance!', 3);\n      setSubmitting(false)\n      return\n    }\n    try {\n      if (_id) {\n        await Axios.put(`${process.env.REACT_APP_API_URL}/rules/${_id}`, body);\n        message.success('Rule Updated Successfully', 3)\n        history.push('/rules')\n      } else {\n        await Axios.post(`${process.env.REACT_APP_API_URL}/rules`, body);\n        message.success('Rule Created Successfully', 3)\n        history.push('/rules')\n      }\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/rules')}\n        title=\"Back to Rules\"\n        subTitle=\"Manage rules associated with content\"\n      />\n\n      <Row>\n        <Col flex=\"1\"></Col>\n        <Col flex=\"1\">\n          <Card bordered>\n            <h2>{_id ? 'Update Rule' : 'Create Rule'}</h2>\n            <Spin size=\"large\" spinning={submitting}>\n              <CreateUpdateRuleForm {...{\n                loading, setLoading,\n                data, setData,\n                filteredData, setFilteredData,\n                selectedRegions, setSelectedRegions,\n                selectedMarkets, setSelectedMarkets,\n                selectedCountries, setSelectedCountries,\n                selectedLanguages, setSelectedLanguages,\n                selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n                title, setTitle,\n                matchType, setMatchType\n              }} />\n              <Space style={{ float: 'left', marginTop: '25px' }}>\n                <Button onClick={() => { history.push('/rules') }} size=\"large\" >Cancel</Button>\n              </Space>\n              <Space style={{ float: 'right', marginTop: '25px' }}>\n                <Button disabled={!(selectedRegions && selectedRegions.length > 0) || !title || !matchType } onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n              </Space>\n            </Spin>\n          </Card>\n        </Col>\n        <Col flex=\"1\"></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateRule\n","import React, { useState, useReducer, useEffect } from 'react'\nimport Axios from 'axios';\nimport { message } from 'antd';\nexport const UserContext = React.createContext();\n\nconst userListReducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'INIT':\n      return payload;\n    case 'ADD':\n      return [payload, ...state];\n    case 'UPDATE':\n      const updated = state.map(user => {\n        if (user._id === payload._id) {\n          return payload\n        }\n        return user;\n      });\n      return updated;\n    default:\n      return state;\n  }\n}\n\nconst UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [userList, dispatchUserListAction] = useReducer(userListReducer, null);\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/users`);\n        dispatchUserListAction({ type: 'INIT', payload: data })\n      } catch (e) {\n        message.error(e.message, 3)\n      }\n    })()\n  }, [])\n  useEffect(() => {\n    if (userList && user) {\n      // update the currently set user\n      setUser(userList.find(({_id})=> _id === user._id))\n    }\n  }, [userList, user, setUser])\n  return (\n    <UserContext.Provider value={{ user, setUser, userList, dispatchUserListAction }}>{children}</UserContext.Provider>\n  )\n}\n\nexport default UserProvider\n","import React, { useContext } from 'react'\nimport { Row, Col, Card, Button, Typography, Skeleton, Tag } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nconst { Title} = Typography;\n\nconst Users = () => {\n  const history = useHistory();\n  const { userList } = useContext(UserContext)\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Users</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/users/create')}>\n            <PlusOutlined /> Create User\n          </Button>\n          <div style={{ marginTop: 20 }}>\n            {\n              userList\n                ? userList.map(\n                  item => <Row key={item._id}>\n                    <Col flex=\"1\">\n                      <div style={{}}>\n                        <Link to={`/users/update/${item._id}`}>\n                        <Card bordered style={{ width: '100%', marginTop: 20 }}\n                          hoverable>\n                          <Avatar shape=\"circle\" size={64} src={item.image} />\n                          <h2 style={{ display: 'inline-block' }}>\n                            {item.name}\n                          </h2>\n                          <h3>\n                            <Tag color=\"magenta\">REGION : <strong>{item.region.title}</strong></Tag>\n                            <Tag color=\"orange\">COUNTRY : <strong>{item.country.title}</strong> </Tag>\n                            <Tag color=\"green\">LANGUAGE : <strong>{item.lang.title}</strong> </Tag>\n                            <Tag color=\"blue\">MARKET : <strong>{item.market.title}</strong> </Tag>\n                            <Tag color=\"purple\">SEGMENT : <strong>{item.issuerSegmentation.title}</strong></Tag>\n                          </h3>\n                          </Card>\n                          </Link>\n                      </div>\n                    </Col>\n                  </Row>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Users\n","import React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst RegionSelector = ({ region, setRegion }) => {\n  const [regions, setRegions] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/regions`);\n      setRegions(data);\n    })()\n  }, [])\n  return (\n    <>\n      <Text type=\"primary\" strong>Region</Text>\n      <br />\n      <Select value={region} size='large' style={{ width: '100%' }} onChange={setRegion} loading={!regions.length}>\n        <Option value={null}>Select Region</Option>\n        {\n          regions && regions.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default RegionSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst CountrySelector = ({ region, country, setCountry }) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setCountries([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/countries?region=${region}`);\n        setCountries(data);\n        const match = data.find(item => item._id === country)\n        if (!match) {\n          setCountry(null);\n        }\n      })()\n    } else {\n      setCountries([]);\n    }\n  }, [region, setCountry])\n  return (\n    <>\n      <Text type=\"primary\" strong>Country</Text>\n      <br />\n      <Select value={country} size='large' style={{ width: '100%' }} onChange={setCountry} loading={!countries.length}>\n        <Option value={null}>Select Country</Option>\n        {\n          countries && countries.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default CountrySelector\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst MarketSelector = ({ region, market, setMarket }) => {\n  const [markets, setMarkets] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setMarkets([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/markets?region=${region}`);\n        setMarkets(data);\n        const match = data.find(item => item._id === market)\n        if (!match) {\n          setMarket(null);\n        }\n      })()\n    } else {\n      setMarkets([]);\n    }\n  }, [region, setMarket])\n  return (\n    <>\n      <Text type=\"primary\" strong>Market</Text>\n      <br />\n      <Select value={market} size='large' style={{ width: '100%' }} onChange={setMarket} loading={!markets.length}>\n        <Option value={null}>Select Market</Option>\n        {\n          markets && markets.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default MarketSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst IssuerSegmentationSelector = ({ region, issuerSegmentation, setIssuerSegmentation }) => {\n  const [issuerSegmentations, setIssuerSegmentations] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setIssuerSegmentations([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/issuer-segmentations?region=${region}`);\n        setIssuerSegmentations(data);\n        const match = data.find(item => item._id === issuerSegmentation)\n        if (!match) {\n          setIssuerSegmentation(null);\n        }\n      })()\n    } else {\n      setIssuerSegmentations([]);\n    }\n  }, [region, setIssuerSegmentation])\n  return (\n    <>\n      <Text type=\"primary\" strong>Issuer Segmentation</Text>\n      <br />\n      <Select value={issuerSegmentation} size='large' style={{ width: '100%' }} onChange={setIssuerSegmentation} loading={!issuerSegmentations.length}>\n        <Option value={null}>Select IssuerSegmentation</Option>\n        {\n          issuerSegmentations && issuerSegmentations.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default IssuerSegmentationSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst LangSelector = ({ country, lang, setLang }) => {\n  const [langs, setLangs] = useState([]);\n  useEffect(() => {\n    if (country) {\n      setLangs([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/languages?country=${country}`);\n        setLangs(data);\n        const match = data.find(item => item._id === lang)\n        if (!match) {\n          setLang(null);\n        }\n      })()\n    } else {\n      setLangs([]);\n    }\n  }, [country, setLang])\n  return (\n    <>\n      <Text type=\"primary\" strong>Language</Text>\n      <br />\n      <Select value={lang} size='large' style={{ width: '100%' }} onChange={setLang} loading={!langs.length}>\n        <Option value={null}>Select Lang</Option>\n        {\n          langs && langs.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br />\n      <br/>\n    </>\n  )\n}\n\nexport default LangSelector\n","import React from 'react'\n\nimport RegionSelector from './RegionSelector';\nimport CountrySelector from './CountrySelector';\nimport MarketSelector from './MarketSelector';\nimport IssuerSegmentationSelector from './IssuerSegmentationSelector';\nimport LangSelector from './LangSelector';\nimport { Input, Typography } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nconst CreateUpdateUserForm = (props) => {\n  const {\n    name, setName,\n    region, setRegion,\n    country, setCountry,\n    market, setMarket,\n    issuerSegmentation, setIssuerSegmentation,\n    lang, setLang\n  } = props\n  return (\n    <>\n      <Text type=\"primary\" strong>Name</Text>\n      <br />\n      <Input style={{ width: '100%' }} value={name} onChange={e => setName(e.target.value)} size=\"large\" placeholder=\"Enter Name\" prefix={<UserOutlined />} />\n      <br />\n      <RegionSelector {...{ region, setRegion }} />\n      <MarketSelector {...{ region, market, setMarket }} />\n      <IssuerSegmentationSelector {...{ region, issuerSegmentation, setIssuerSegmentation }} />\n      <CountrySelector {...{ region, country, setCountry }} />\n      <LangSelector {...{ country, lang, setLang }} />\n    </>\n  )\n}\n\nexport default CreateUpdateUserForm\n","import React, { useEffect, useState, useContext } from 'react'\nimport { useParams, useHistory } from 'react-router'\nimport Axios from 'axios'\nimport { message, Row, Col, Card, Skeleton, Button, Space, Spin, PageHeader } from 'antd'\nimport CreateUpdateUserForm from '../components/CreateUpdateUserForm'\nimport { UserContext } from '../context/UserContext'\n\nconst CreateUpdateUser = () => {\n  const { dispatchUserListAction } = useContext(UserContext)\n  const history = useHistory();\n  const { _id } = useParams()\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState(null);\n  const [region, setRegion] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [lang, setLang] = useState(null);\n  const [market, setMarket] = useState(null);\n  const [issuerSegmentation, setIssuerSegmentation] = useState(null);\n\n  useEffect(() => {\n    if (_id) {\n      (async () => {\n        setLoading(true);\n        try {\n          const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/users/${_id}`);\n          init(data)\n        } catch (e) {\n          message.error(e.message, 3)\n          setLoading(false)\n        }\n      })()\n    }\n  }, [_id])\n  const init = (user) => {\n    setName(user.name)\n    setRegion(user.region._id)\n    setMarket(user.market._id)\n    setIssuerSegmentation(user.issuerSegmentation._id)\n    setCountry(user.country._id)\n    setLang(user.lang._id)\n    setLoading(false)\n  }\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n      if (_id) {\n        const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/users/${_id}`, { name, region, country, lang: lang, market, issuerSegmentation });\n        dispatchUserListAction({ type: 'UPDATE', payload: data });\n      } else {\n        const { data } = await Axios.post(`${process.env.REACT_APP_API_URL}/users`, { name, region, country, lang: lang, market, issuerSegmentation });\n        dispatchUserListAction({ type: 'ADD', payload: data });\n        message.success('User Created Successfully', 3)\n      }\n      history.push('/users')\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/users')}\n        title=\"Users\"\n      />\n      <Row>\n        <Col span={8} />\n        <Col span={8}>\n          <Card bordered>\n            <h2>{_id ? 'Update User' : 'Create User'}</h2>\n            {!loading\n              ? <>\n                <Spin size=\"large\" spinning={submitting}>\n                  <CreateUpdateUserForm {\n                    ...{\n                      name, setName,\n                      region, setRegion,\n                      country, setCountry,\n                      market, setMarket,\n                      issuerSegmentation, setIssuerSegmentation,\n                      lang, setLang\n                    }\n                  } />\n                  <Space style={{ float: 'left' }}>\n                    <Button onClick={() => { history.push('/users') }} size=\"large\" >Cancel</Button>\n                  </Space>\n                  <Space style={{ float: 'right' }}>\n                    <Button disabled={!name || !region || !country || !market || !issuerSegmentation || !lang} onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n                  </Space>\n                </Spin>\n              </>\n              : <Skeleton active paragraph={{ rows: 10 }} />\n            }\n          </Card>\n        </Col>\n        <Col span={8} />\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateUser\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Card, Button, Typography, message, Skeleton, Tag, Input, Spin } from 'antd'\nimport { PlusOutlined, SettingOutlined, EditOutlined } from '@ant-design/icons'\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'antd/lib/modal/Modal';\nconst { Title } = Typography;\nconst Contents = () => {\n  const history = useHistory();\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const [showUpdateModal, setShowUpdateModal] = useState(false)\n  const [contents, setContents] = useState();\n  const [contentTitle, setContentTitle] = useState();\n  const [currentContent, setCurrentContent] = useState();\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/contents`);\n        setContents(data)\n      } catch (e) {\n        message.error(e.message, 3)\n      }\n    })()\n  }, []);\n  const handleCreate = async () => {\n    if (contentTitle) {\n      setSubmitting(true)\n      try {\n        const { data } = await Axios.post(`${process.env.REACT_APP_API_URL}/contents`, { title: contentTitle });\n        setContents([data, ...contents])\n        setShowCreateModal(false)\n        setSubmitting(false)\n        setContentTitle(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  const handleUpdate = async () => {\n    if (currentContent && currentContent.title) {\n\n      setSubmitting(true)\n      try {\n        const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${currentContent._id}`, { title: currentContent.title });\n        const updated = contents.map(content => {\n          if (content._id === data._id) {\n            return data;\n          }\n          return content\n        })\n        setContents(updated)\n        setShowUpdateModal(false)\n        setSubmitting(false)\n        setCurrentContent(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Contents</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => setShowCreateModal(true)}>\n            <PlusOutlined /> Create Content\n          </Button>\n          <Row style={{ marginTop: 20 }}>\n            {\n              contents\n                ? contents.map(\n                  item => <Col span={8} key={item._id}>\n                    <Card\n                      style={{ width: 500, marginTop: 16 }}\n                      actions={[\n                        <><SettingOutlined key=\"rules\" onClick={() => history.push(`/contents/${item._id}`)} /> Rules</>,\n                        <><EditOutlined key=\"edit\" onClick={() => { setCurrentContent(item); setShowUpdateModal(true) }} />Edit</>\n                      ]}\n                    >\n                      <Avatar shape=\"circle\" size={100} src={item.image} />\n                      <h2 style={{ display: 'inline-block' }}>\n                        {item.title}\n                        <br />\n                        {\n                          item.rules && item.rules.length > 0\n                            ? <Tag color=\"green\"><strong>Rules Applied</strong></Tag>\n                            : <Tag color=\"red\"><strong>No Rules</strong></Tag>\n                        }\n                      </h2>\n                    </Card>\n                  </Col>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </Row>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Create Content\"\n        visible={showCreateModal}\n        okText='Create'\n        onOk={handleCreate}\n        onCancel={() => setShowCreateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          <Input placeholder=\"Content Title\"\n            value={contentTitle}\n            onChange={e => setContentTitle(e.target.value)}\n          />\n        </Spin>\n      </Modal>\n      <Modal\n        title=\"Update Content\"\n        visible={showUpdateModal}\n        onOk={handleUpdate}\n        okText='Update'\n        onCancel={() => setShowUpdateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          {\n            currentContent\n              ? <Input placeholder=\"Content Title\"\n                value={currentContent.title}\n                onChange={e => { setCurrentContent({ ...currentContent, title: e.target.value }) }}\n              />\n              : ''\n          }\n        </Spin>\n      </Modal>\n    </>\n  )\n}\n\nexport default Contents\n","import React, { useState, useEffect} from 'react'\nimport { List, Row, Switch, Col, Card, message, Skeleton, Spin, Typography, Divider, Result, Button, Space, PageHeader, Radio } from 'antd'\nimport RuleList from '../components/RuleList'\nimport { useParams, useHistory } from 'react-router';\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { DeleteOutlined, FundViewOutlined } from '@ant-design/icons'\nimport RegionSelector from '../components/RegionSelector';\nconst { Title, Text } = Typography\nconst ConfigureContentRules = () => {\n  const history = useHistory();\n  const { _id } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [content, setContent] = useState();\n  const [updatingRules, setUpdatingRules] = useState(false);\n  const [search, setSearch] = useState();\n  const [region, setRegion] = useState('5f22f961ab69d5439029b3e8');\n  const [lazy, setLazy] = useState(true)\n  const onRuleSelect = async (newRuleId) => {\n    // get current rule list , add this rule to that & update the content with it\n    const ruleIds = content.rules.map(({ _id }) => _id)\n    if (ruleIds.indexOf(newRuleId) === -1) {\n      setUpdatingRules(true)\n      ruleIds.push(newRuleId)\n      try {\n        const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { rules: ruleIds });\n        setContent(data);\n        setUpdatingRules(false)\n      } catch (e) {\n        message.error(e.message)\n        setUpdatingRules(false)\n      }\n    } else {\n      message.warn('The rule you are trying to apply, is already applied to this content', 5)\n    }\n  }\n  const onRuleRemove = async (ruleToRemove) => {\n    setUpdatingRules(true)\n    let ruleIds = content.rules.map(({ _id }) => _id)\n    ruleIds = ruleIds.filter(_id => _id !== ruleToRemove)\n    try {\n      const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { rules: ruleIds });\n      setContent(data);\n      setUpdatingRules(false)\n    } catch (e) {\n      message.error(e.message)\n      setUpdatingRules(false)\n    }\n  }\n  const updateRuleMatchType = async (ruleMatchType) => {\n    setUpdatingRules(true)\n    try {\n      const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { ruleMatchType });\n      setContent(data);\n      setUpdatingRules(false)\n      message.success(`Updated: ${ruleMatchType} rule(s) will be matched during content targetting for users!`)\n    } catch (e) {\n      message.error(e.message)\n      setUpdatingRules(false)\n    }\n  }\n  useEffect(() => {\n    if (_id) {\n      setLoading(true)\n      try {\n        (async () => {\n          const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/contents/${_id}`);\n          setContent(data)\n          setLoading(false)\n        })()\n      } catch (e) {\n        message.error(e.message)\n        setLoading(false)\n      }\n    }\n  }, [_id])\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/contents')}\n        title=\"Back\"\n        subTitle=\"Manage rules associated with content\"\n        extra={\n          (\n            <div style={{width: 200}}>\n              Currently Managing:  <RegionSelector {...{ region, setRegion }} />\n            </div>\n          )\n        }\n      >\n      </PageHeader>\n\n      <Row>\n        <Col span={12}>\n          <Card title=\"Content Details\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <Spin size=\"large\" spinning={loading}>\n              {\n                content ?\n                  <>\n                    <Row>\n                      <Col span=\"6\">\n                        <Avatar shape=\"circle\" size={50} src={content.image} />\n                      </Col>\n                      <Col span=\"18\">\n                        <Title level={4} style={{ marginTop: 20 }}>{content.title}</Title>\n                      </Col>\n                    </Row>\n                    <Divider orientation=\"left\">Rules</Divider>\n                    {\n                      updatingRules\n                        ? <Skeleton active paragraph={{ rows: 20 }}></Skeleton>\n                        : content.rules && content.rules.length > 0\n                          ? <>\n                            <Text type=\"primary\" strong>Match Type</Text>\n                            <br />\n                            <Radio.Group\n                              options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n                              onChange={e => updateRuleMatchType(e.target.value)}\n                              value={content.ruleMatchType}\n                              optionType=\"button\"\n                              buttonStyle=\"solid\"\n                            />\n                            <br />\n                            <List\n                              size=\"large\"\n                              bordered\n                              dataSource={content.rules}\n                              renderItem={\n                                item => <List.Item>\n                                  <Text>{item.title}</Text>\n                                  <Space>\n                                    <Button onClick={() => onRuleRemove(item._id)} title=\"Remove Rule\" type=\"danger\" shape=\"circle\" icon={<DeleteOutlined />} />\n                                    <Button onClick={() => setSearch(item.title)} type=\"primary\" icon={<FundViewOutlined />}>View Dteails</Button>\n                                  </Space>\n                                </List.Item>\n                              }\n                            />\n                          </>\n                          : <Result\n                            status=\"404\"\n                            title=\"No Rules Applied\"\n                            subTitle=\"Search rules from sidebar & click to apply\"\n                            extra={<Title level={4}>This content is visible to all by default!</Title>}\n                          />\n                    }\n                  </>\n                  : ''\n              }\n            </Spin>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Search & Apply Rules\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <Switch checkedChildren=\"Search Only\" unCheckedChildren=\"Show All\" onChange={() => setLazy(!lazy) && setSearch(null)} />\n            <div style={{ height: '90vh', overflowY: 'auto' }}>\n              <RuleList search={search} region={region} lazy={lazy} clickAction={onRuleSelect}></RuleList>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ConfigureContentRules\n","import React, { useContext, useState, useEffect } from 'react'\nimport { UserContext } from '../context/UserContext'\nimport { Select, message, Result, Card, Tag, Spin, Row, Col } from 'antd'\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { Link } from 'react-router-dom';\nconst { Option } = Select;\n\nconst SimulateUserSession = () => {\n  const { user, setUser, userList } = useContext(UserContext)\n  const [loading, setLoading] = useState(false)\n  const [contents, setContents] = useState()\n  const onUserSelect = (value) => {\n    const selected = userList.find(({ _id }) => _id === value)\n    setUser(selected)\n  }\n  useEffect(() => {\n    if (user) {\n      setLoading(true);\n      (async () => {\n        try {\n          const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/targetted-contents/${user._id}`);\n          setContents(data)\n          setLoading(false)\n        } catch (e) {\n          message.error(e.message, 3)\n          setLoading(false)\n        }\n      })()\n    }\n\n  }, [user])\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <Select\n          loading={!userList}\n          value={user && user._id}\n          size='large'\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Select a User\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n          onChange={onUserSelect}\n        >\n          {\n            userList && userList.map(user => <Option key={user._id} value={user._id}>{user.name}</Option>)\n          }\n        </Select>\n      </div>\n      <div>\n\n        {\n          user\n            ? <>\n              <Card bordered style={{ width: '100%', marginTop: 20 }}>\n                <Avatar shape=\"circle\" size={40} src={user.image} />\n                <h4 style={{ display: 'inline-block' }}>\n                  {user.name} &nbsp;\n                  <Tag color=\"magenta\">REGION : <strong>{user.region.title}</strong></Tag>\n                  <Tag color=\"orange\">COUNTRY : <strong>{user.country.title}</strong> </Tag>\n                  <Tag color=\"green\">LANGUAGE : <strong>{user.lang.title}</strong> </Tag>\n                  <Tag color=\"blue\">MARKET : <strong>{user.market.title}</strong> </Tag>\n                  <Tag color=\"purple\">SEGMENT : <strong>{user.issuerSegmentation.title}</strong></Tag>\n                </h4>\n              </Card>\n              <Spin size=\"large\" spinning={loading}>\n                <Row gutter={3}>\n                  {\n                    contents ? contents.map((content) => {\n                      return <Col span=\"6\" key={content._id}>\n                        <Card bordered style={{ height: '100%', width: '100%', marginTop: 20 }}>\n                          <Avatar shape=\"circle\" size={64} src={content.image} />\n                          <h3 style={{ display: 'inline-block' }}>\n                            {content.title}\n                          </h3>\n                          <h3>\n                            {\n                              content.rules.map(rule => <Tag key={rule._id} color=\"green\"><Link to={`/rules/update/${rule._id}`}><strong>RULE: {rule.title}</strong></Link></Tag>)\n                            }\n                          </h3>\n                        </Card>\n                      </Col>\n                    }) : ''\n                  }\n                </Row>\n              </Spin>\n            </>\n            : <Result\n              title=\"Please sign in as a User from above selector\"\n            />\n        }\n      </div>\n\n    </>\n  )\n}\n\nexport default SimulateUserSession\n","import React, { useEffect, useState } from 'react';\nimport { Layout, Menu, notification, Result } from 'antd';\nimport { GithubOutlined, ScheduleOutlined, UsergroupAddOutlined, LoginOutlined, PicLeftOutlined } from '@ant-design/icons';\nimport { NavLink, useLocation, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport Rules from './pages/Rules';\nimport CreateUpdateRule from './pages/CreateUpdateRule';\nimport Users from './pages/Users';\nimport CreateUpdateUser from './pages/CreateUpdateUser';\nimport Contents from './pages/Contents';\nimport ConfigureContentRules from './pages/ConfigureContentRules';\nimport SimulateUserSession from './pages/SimulateUserSession';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [accepted, setAccepted] = useState(localStorage.getItem('termsAccepted'))\n  useEffect(() => {\n    if (!accepted) {\n      notification.warning({\n        message: <h2 style={{ color: '#FAB120' }}>Important Instructions</h2>,\n        duration: null,\n        description: (\n          <ul>\n            <li>All the data used is <strong>fictitious</strong></li>\n            <li>User & content image thumbnails are generated randomly & should not be associated with any kind of <strong>race/color/gender discrimination</strong></li>\n            <li>Available features are just for <strong>demo purpose</strong> & may differ from actual requirements</li>\n            <li>By <strong>clicking or closing</strong> this notification, you agree with above conditions!</li>\n          </ul>\n        ),\n        style: {\n          width: '100%'\n        },\n        onClick: () => {\n          setAccepted(true)\n          localStorage.setItem('termsAccepted', true)\n        },\n        onClose: () => {\n          setAccepted(true)\n          localStorage.setItem('termsAccepted', true)\n        }\n      });\n    }\n  }, [accepted])\n  const location = useLocation();\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Link to=\"/\">\n          <div className=\"logo\" >RULE ENGINE DEMO</div>\n        </Link>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname,]}>\n          <Menu.Item key=\"/users\">\n            <NavLink to=\"/users\">\n              <UsergroupAddOutlined />\n              <strong>Users</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/rules\">\n            <NavLink to=\"/rules\">\n              <ScheduleOutlined />\n              <strong>Rules</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/contents\">\n            <NavLink to=\"/contents\">\n              <PicLeftOutlined />\n              <strong>Contents</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/simulate\">\n            <NavLink to=\"/simulate\">\n              <LoginOutlined />\n              <strong>Simulate User Session</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://github.com/rahulbhooteshwar/rule-engine-demo-client\">\n            <GithubOutlined /> <strong style={{color: 'orange'}}>UI</strong>\n            </a>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://github.com/rahulbhooteshwar/rule-engine-demo-server\">\n            <GithubOutlined /> <strong style={{color: 'orange'}}>API</strong>\n            </a>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://rahulbhooteshwar.github.io\">\n              Brought to you by: <strong style={{color: 'orange'}}>Rahul Bhooteshwar</strong>\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content>\n        <div style={{ backgroundColor: 'white', minHeight: '100vh' }}>\n          {\n            accepted ?\n              <Switch>\n                <Route path=\"/simulate\">\n                  <SimulateUserSession />\n                </Route>\n                <Route path=\"/contents/:_id\">\n                  <ConfigureContentRules />\n                </Route>\n                <Route path=\"/contents\">\n                  <Contents />\n                </Route>\n                <Route path=\"/rules/create\">\n                  <CreateUpdateRule />\n                </Route>\n                <Route path=\"/rules/update/:_id\">\n                  <CreateUpdateRule />\n                </Route>\n                <Route path=\"/rules\">\n                  <Rules />\n                </Route>\n                <Route path=\"/users/create\">\n                  <CreateUpdateUser />\n                </Route>\n                <Route path=\"/users/update/:_id\">\n                  <CreateUpdateUser />\n                </Route>\n                <Route path=\"/users\">\n                  <Users />\n                </Route>\n                <Route path=\"/\">\n                  <Redirect to=\"/users\" />\n                </Route>\n              </Switch>\n\n              : <Result\n                style={{ paddingTop: 200 }}\n                status=\"500\"\n                title=\"Let's be clear at first place\"\n                subTitle=\"Read & Close the notification to continue.\"\n              />\n          }\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Rule Engine Demo ©2020 Created by <a target=\"blank\" href=\"https://rahulbhooteshwar.github.io\">Rahul Bhooteshwar</a></Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport UserProvider from './context/UserContext';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}