{"version":3,"sources":["components/RuleList.js","pages/Rules.js","components/CreateUpdateRuleForm.js","pages/CreateUpdateRule.js","pages/Users.js","components/RegionSelector.js","components/CountrySelector.js","components/MarketSelector.js","components/IssuerSegmentationSelector.js","components/LangSelector.js","components/CreateUpdateUserForm.js","pages/CreateUpdateUser.js","pages/Contents.js","pages/ConfigureContentRules.js","App.js","index.js"],"names":["RuleList","region","lazy","search","clickAction","useState","rules","setRules","keyword","setKeyword","loading","setLoading","history","useHistory","useEffect","colorMaps","length","a","url","process","params","regions","Axios","get","data","message","error","flex","style","padding","background","size","allowClear","placeholder","value","onChange","e","target","active","paragraph","rows","marginTop","map","item","onClick","_id","push","key","bordered","width","hoverable","display","title","fontSize","color","conditionMatchType","conditions","condition","attribute","RightCircleOutlined","inValues","index","Title","Typography","Rules","type","level","strong","PlusOutlined","Text","Option","Select","CreateUpdateRuleForm","filteredData","setTitle","matchType","setMatchType","selectedRegions","setSelectedRegiions","selectedMarkets","setSelectedMarkets","selectedCountries","setSelectedCountries","selectedLanguages","setSelectedLanguages","selectedIssuerSegmentations","setSelectedIssuerSegmentations","mode","filterOption","optionFilterProp","optionLabelProp","label","Group","options","optionType","buttonStyle","markets","values","issuerSegmentations","countries","languages","CreateUpdateRule","useParams","submitting","setSubmitting","setData","setFilteredData","init","initFormData","rule","forEach","langCondition","find","filter","indexOf","onRegionSelect","country","onCountrySelect","handleSubmit","body","put","success","post","className","onBack","subTitle","spinning","float","disabled","Users","users","setUsers","to","shape","src","image","name","lang","market","issuerSegmentation","avatar","RegionSelector","setRegion","setRegions","CountrySelector","setCountry","setCountries","MarketSelector","setMarket","setMarkets","IssuerSegmentationSelector","setIssuerSegmentation","setIssuerSegmentations","LangSelector","setLang","langs","setLangs","CreateUpdateUserForm","props","setName","prefix","UserOutlined","CreateUpdateUser","user","span","Contents","showCreateModal","setShowCreateModal","showUpdateModal","setShowUpdateModal","contents","setContents","contentTitle","setContentTitle","currentContent","setCurrentContent","handleCreate","handleUpdate","updated","content","actions","SettingOutlined","EditOutlined","visible","okText","onOk","onCancel","ConfigureContentRules","setContent","updatingRules","setUpdatingRules","setSearch","onRuleSelect","newRuleId","ruleIds","warn","onRuleRemove","ruleToRemove","updateRuleMatchType","ruleMatchType","minHeight","orientation","dataSource","renderItem","Item","icon","DeleteOutlined","FundViewOutlined","status","extra","height","overflowY","Header","Layout","Content","Footer","App","location","useLocation","theme","selectedKeys","pathname","UsergroupAddOutlined","ScheduleOutlined","PicLeftOutlined","LoginOutlined","backgroundColor","path","textAlign","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1a40fb0f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Axios from 'axios';\nimport { message, Row, Col, Skeleton, Card, Tag, Input } from 'antd';\nimport { RightCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nconst RuleList = ({ region, lazy = false, search, clickAction=null }) => {\n  const [rules, setRules] = useState();\n  const [keyword, setKeyword] = useState();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (search) {\n      setKeyword(search)\n    }\n  }, [search])\n  const colorMaps = {\n    'country': 'orange',\n    'lang': 'green',\n    'market': 'blue',\n    'issuerSegmentation': 'purple'\n  }\n  useEffect(() => {\n    if (!lazy || (lazy && keyword && keyword.length > 2)) {\n      (async () => {\n        let url = `${process.env.REACT_APP_API_URL}/rules`;\n        let params = {};\n        if (region) {\n          params.regions = region\n        }\n        if (keyword) {\n          params.keyword = keyword\n        }\n        try {\n          setLoading(true)\n          const { data } = await Axios.get(url, { params: params });\n          setRules(data)\n          setLoading(false)\n        } catch (e) {\n          setLoading(false)\n          message.error(e.message, 3)\n        }\n      })()\n    }\n  }, [region, lazy, keyword]);\n  const handleClick = (_id) => {\n    if (clickAction) {\n      clickAction(_id)\n    } else {\n      history.push('/rules/update/'+_id)\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          {\n            lazy\n              ? <Input size=\"large\" allowClear placeholder=\"Type something...\" value={keyword} onChange={e => setKeyword(e.target.value)} />\n              : ''\n          }\n            {\n              loading ?\n                <>\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                  <Skeleton active paragraph={{ rows: 2 }} />\n                </>\n                : ''\n            }\n            <div style={{ marginTop: 20 }}>\n              {\n                rules && !loading\n                  ? rules.map(\n                    item => <Card onClick={()=> handleClick(item._id)} key={item._id} bordered style={{ width: '100%', marginTop: 20 }}\n                      hoverable>\n                      <Row>\n                        <Col flex=\"1\">\n                          <h2 style={{ display: 'inline-block' }}>\n                            {item.title}\n                          </h2>\n                        </Col>\n                        <Col flex=\"4\">\n                          <Tag style={{ fontSize: 20 }} color=\"gold\">Match Type : <strong>{item.conditionMatchType}</strong></Tag>\n                          <Tag style={{ fontSize: 20 }} color=\"magenta\">REGIONS : <strong>{item.regions.map(region => ' ' + region.title)}</strong></Tag>\n                          {\n                            item.conditions.map((condition) => {\n                              return <Tag style={{ fontSize: 20 }} key={condition.attribute} color={colorMaps[condition.attribute]}>\n                                {condition.attribute}  <RightCircleOutlined />\n                                <strong>\n                                  {condition.inValues.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                                </strong>\n                              </Tag>\n                            })\n                          }\n                        </Col>\n                      </Row>\n\n                    </Card>\n                  )\n                  : ''\n              }\n            </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default RuleList\n","import React from 'react'\nimport { Row, Col, Typography, Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nimport RuleList from '../components/RuleList';\nconst { Title } = Typography;\n\nconst Rules = () => {\n  const history = useHistory()\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Rules</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/rules/create')}>\n            <PlusOutlined /> Create Rule\n          </Button>\n          <RuleList></RuleList>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Rules\n","import React from 'react'\nimport { Skeleton, Typography, Input, Select, Radio } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\n\nconst CreateUpdateRuleForm = ({\n  loading,\n  data,\n  filteredData,\n  title, setTitle,\n  matchType, setMatchType,\n  selectedRegions, setSelectedRegiions,\n  selectedMarkets, setSelectedMarkets,\n  selectedCountries, setSelectedCountries,\n  selectedLanguages, setSelectedLanguages,\n  selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n}) => {\n\n  return (\n    <>\n      {\n        loading\n          ? <Skeleton active paragraph={{ rows: 12 }} />\n          : ''\n      }\n      {data\n        ? <>\n          <Text type=\"primary\" strong>Title</Text>\n          <Input style={{ width: '100%' }} value={title} onChange={e => setTitle(e.target.value)} size=\"large\" placeholder=\"Enter Title\" />\n          <br />\n          <Text type=\"primary\" strong>Available in Regions</Text>\n          <Select\n            value={selectedRegions}\n            onChange={regions => setSelectedRegiions(regions)}\n            mode=\"multiple\"\n            size=\"large\"\n            filterOption\n            optionFilterProp=\"label\"\n            placeholder=\"Select Regions\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              data.regions.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <h3 style={{marginTop: \"10px\"}}>Configure Conditions</h3>\n          <Text type=\"primary\" strong>Match Type</Text>\n          <br />\n          <Radio.Group\n            options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n            onChange={e=> setMatchType(e.target.value)}\n            value={matchType}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n          <br />\n          <Text type=\"primary\" strong>Markets</Text>\n          <Select\n            value={selectedMarkets}\n            onChange={(markets) => setSelectedMarkets(markets)}\n            mode=\"multiple\"\n            filterOption\n            optionFilterProp=\"label\"\n            size=\"large\"\n            placeholder=\"Select Markets\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.markets && filteredData.markets.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Issuer Segmentations</Text>\n          <Select\n            value={selectedIssuerSegmentations}\n            onChange={values => setSelectedIssuerSegmentations(values)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Segmentations\"\n            style={{ width: '100%' }}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.issuerSegmentations && filteredData.issuerSegmentations.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Countries</Text>\n          <Select\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Countries\"\n            style={{ width: '100%' }}\n            value={selectedCountries}\n            onChange={countries => setSelectedCountries(countries)}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.countries && filteredData.countries.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Languages</Text>\n          <Select\n            value={selectedLanguages}\n            onChange={languages => setSelectedLanguages(languages)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Languages\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n            filterOption\n            optionFilterProp=\"label\"\n          >\n            {\n              filteredData && filteredData.languages && filteredData.languages.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n        </>\n        : ''\n      }\n    </>\n  )\n}\n\nexport default CreateUpdateRuleForm\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { message, Row, Col, Card, Space, Button, Spin, PageHeader } from 'antd';\nimport CreateUpdateRuleForm from '../components/CreateUpdateRuleForm';\nimport { useHistory, useParams } from 'react-router';\n\nconst CreateUpdateRule = () => {\n  const history = useHistory()\n  const { _id } = useParams()\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setData] = useState();\n  const [filteredData, setFilteredData] = useState({});\n  const [selectedRegions, setSelectedRegiions] = useState([]);\n  const [selectedMarkets, setSelectedMarkets] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedIssuerSegmentations, setSelectedIssuerSegmentations] = useState([]);\n  const [title, setTitle] = useState();\n  const [matchType, setMatchType] = useState('ALL');\n  const init = async () => {\n    setLoading(true);\n    try {\n      const { data: regions } = await Axios.get(`${process.env.REACT_APP_API_URL}/regions`);\n      const { data: markets } = await Axios.get(`${process.env.REACT_APP_API_URL}/markets`);\n      const { data: issuerSegmentations } = await Axios.get(`${process.env.REACT_APP_API_URL}/issuer-segmentations`);\n      const { data: countries } = await Axios.get(`${process.env.REACT_APP_API_URL}/countries`);\n      const { data: languages } = await Axios.get(`${process.env.REACT_APP_API_URL}/languages`);\n      setData({ regions, markets, issuerSegmentations, countries, languages })\n      if (_id) {\n        initFormData()\n      }\n      setLoading(false)\n    } catch (e) {\n      setLoading(false)\n      message.error(e.message, 3)\n    }\n\n  }\n  const initFormData = async () => {\n    const { data: rule } = await Axios.get(`${process.env.REACT_APP_API_URL}/rules/${_id}`);\n    setTitle(rule.title);\n    setSelectedRegiions(rule.regions);\n    setMatchType(rule.conditionMatchType);\n    rule.conditions.forEach((condition) => {\n      switch (condition.attribute) {\n        case 'country': {\n          setSelectedCountries(condition.inValues)\n          break;\n        }\n        //  In order to avoid race condition between country & language we will do it separately after this\n        // case 'lang': {\n        //   setSelectedLanguages(condition.inValues)\n        //   break;\n        // }\n        case 'market': {\n          setSelectedMarkets(condition.inValues)\n          break;\n        }\n        case 'issuerSegmentation': {\n          setSelectedIssuerSegmentations(condition.inValues)\n          break;\n        }\n        default: {\n          // do nothing\n        }\n      }\n    })\n    // update languages separately\n    const langCondition = rule.conditions.find(condition => condition.attribute === 'lang')\n    if (langCondition) {\n      setSelectedLanguages(langCondition.inValues)\n    }\n  }\n  const onRegionSelect = () => {\n    if (data) {\n      const markets = data.markets.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const issuerSegmentations = data.issuerSegmentations.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const countries = data.countries.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      // clear selected data for dependent fields\n      setSelectedMarkets(selectedMarkets.filter(value => {\n        const target = data.markets.find(item => item._id === value)\n        return selectedRegions.indexOf(target.region) !== -1\n      }))\n      setSelectedIssuerSegmentations(selectedIssuerSegmentations.filter(\n        value => {\n          const target = data.issuerSegmentations.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      setSelectedCountries(selectedCountries.filter(\n        value => {\n          const target = data.countries.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      // following data will be used for showing filtered data in select options\n      setFilteredData({ markets, issuerSegmentations, countries })\n    }\n  }\n  const onCountrySelect = () => {\n    if (data) {\n      // clear selected data for dependent fields\n      setSelectedLanguages(selectedLanguages.filter(\n        value => {\n          const target = data.languages.find(item => item._id === value)\n          return selectedCountries.indexOf(target.country) !== -1\n        }\n      ))\n      // filter languages to show in options\n      const languages = data.languages.filter(({ country }) => selectedCountries.indexOf(country) !== -1)\n      setFilteredData({ ...filteredData, languages })\n    }\n  }\n  useEffect(() => {\n    init()\n  }, [])\n\n  useEffect(() => {\n    if (selectedRegions) {\n      onRegionSelect()\n    }\n  }, [selectedRegions])\n\n  useEffect(() => {\n    if (selectedCountries) {\n      onCountrySelect()\n    }\n  }, [selectedCountries])\n\n  const handleSubmit = async () => {\n    setSubmitting(true)\n    const body = {\n      title,\n      regions: selectedRegions,\n      conditionMatchType: matchType,\n      conditions: []\n    }\n    if (selectedMarkets && selectedMarkets.length > 0) {\n      body.conditions.push({\n        attribute: 'market',\n        inValues: selectedMarkets\n      })\n    }\n    if (selectedCountries && selectedCountries.length > 0) {\n      body.conditions.push({\n        attribute: 'country',\n        inValues: selectedCountries\n      })\n    }\n    if (selectedLanguages && selectedLanguages.length > 0) {\n      body.conditions.push({\n        attribute: 'lang',\n        inValues: selectedLanguages\n      })\n    }\n    if (selectedIssuerSegmentations && selectedIssuerSegmentations.length > 0) {\n      body.conditions.push({\n        attribute: 'issuerSegmentation',\n        inValues: selectedIssuerSegmentations\n      })\n    }\n    try {\n      if (_id) {\n        await Axios.put(`${process.env.REACT_APP_API_URL}/rules/${_id}`, body);\n        message.success('Rule Updated Successfully', 3)\n        history.push('/rules')\n      } else {\n        await Axios.post(`${process.env.REACT_APP_API_URL}/rules`, body);\n        message.success('Rule Created Successfully', 3)\n        history.push('/rules')\n      }\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/rules')}\n        title=\"Back to Rules\"\n        subTitle=\"Manage rules associated with content\"\n      />\n\n      <Row>\n        <Col flex=\"1\"></Col>\n        <Col flex=\"1\">\n          <Card bordered>\n            <h2>{_id ? 'Update Rule' : 'Create Rule'}</h2>\n            <Spin size=\"large\" spinning={submitting}>\n              <CreateUpdateRuleForm {...{\n                loading, setLoading,\n                data, setData,\n                filteredData, setFilteredData,\n                selectedRegions, setSelectedRegiions,\n                selectedMarkets, setSelectedMarkets,\n                selectedCountries, setSelectedCountries,\n                selectedLanguages, setSelectedLanguages,\n                selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n                title, setTitle,\n                matchType, setMatchType\n              }} />\n              <Space style={{ float: 'left', marginTop: '25px' }}>\n                <Button onClick={() => { history.push('/rules') }} size=\"large\" >Cancel</Button>\n              </Space>\n              <Space style={{ float: 'right', marginTop: '25px' }}>\n                <Button disabled={!(selectedRegions && selectedRegions.length > 0) || !title || !matchType} onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n              </Space>\n            </Spin>\n          </Card>\n        </Col>\n        <Col flex=\"1\"></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateRule\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Card, Button, Typography, message, Skeleton, Tag } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { Link, useHistory } from 'react-router-dom';\nconst { Title} = Typography;\n\nconst Users = () => {\n  const history = useHistory();\n  const [users, setUsers] = useState();\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/users`);\n        setUsers(data)\n      } catch (e) {\n        message.error(e.message, 3)\n      }\n    })()\n  }, []);\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Users</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/users/create')}>\n            <PlusOutlined /> Create User\n          </Button>\n          <div style={{ marginTop: 20 }}>\n            {\n              users\n                ? users.map(\n                  item => <Row key={item._id}>\n                    <Col flex=\"1\">\n                      <div style={{}}>\n                        <Link to={`/users/update/${item._id}`}>\n                        <Card bordered style={{ width: '100%', marginTop: 20 }}\n                          hoverable>\n                          <Avatar shape=\"circle\" size={64} src={item.image} />\n                          <h2 style={{ display: 'inline-block' }}>\n                            {item.name}\n                          </h2>\n                          <h3>\n                            <Tag color=\"magenta\">REGION : <strong>{item.region.title}</strong></Tag>\n                            <Tag color=\"orange\">COUNTRY : <strong>{item.country.title}</strong> </Tag>\n                            <Tag color=\"green\">LANGUAGE : <strong>{item.lang.title}</strong> </Tag>\n                            <Tag color=\"blue\">MARKET : <strong>{item.market.title}</strong> </Tag>\n                            <Tag color=\"purple\">SEGMENT : <strong>{item.issuerSegmentation.title}</strong></Tag>\n                          </h3>\n                          </Card>\n                          </Link>\n                      </div>\n                    </Col>\n                  </Row>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Users\n","import React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst RegionSelector = ({ region, setRegion }) => {\n  const [regions, setRegions] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/regions`);\n      setRegions(data);\n    })()\n  }, [])\n  return (\n    <>\n      <Text type=\"primary\" strong>Region</Text>\n      <br />\n      <Select value={region} size='large' style={{ width: '100%' }} onChange={setRegion} loading={!regions.length}>\n        <Option value={null}>Select Region</Option>\n        {\n          regions && regions.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default RegionSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst CountrySelector = ({ region, country, setCountry }) => {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setCountries([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/countries?region=${region}`);\n        setCountries(data);\n        const match = data.find(item => item._id === country)\n        if (!match) {\n          setCountry(null);\n        }\n      })()\n    } else {\n      setCountries([]);\n    }\n  }, [region, setCountry])\n  return (\n    <>\n      <Text type=\"primary\" strong>Country</Text>\n      <br />\n      <Select value={country} size='large' style={{ width: '100%' }} onChange={setCountry} loading={!countries.length}>\n        <Option value={null}>Select Country</Option>\n        {\n          countries && countries.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default CountrySelector\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst MarketSelector = ({ region, market, setMarket }) => {\n  const [markets, setMarkets] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setMarkets([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/markets?region=${region}`);\n        setMarkets(data);\n        const match = data.find(item => item._id === market)\n        if (!match) {\n          setMarket(null);\n        }\n      })()\n    } else {\n      setMarkets([]);\n    }\n  }, [region, setMarket])\n  return (\n    <>\n      <Text type=\"primary\" strong>Market</Text>\n      <br />\n      <Select value={market} size='large' style={{ width: '100%' }} onChange={setMarket} loading={!markets.length}>\n        <Option value={null}>Select Market</Option>\n        {\n          markets && markets.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default MarketSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst IssuerSegmentationSelector = ({ region, issuerSegmentation, setIssuerSegmentation }) => {\n  const [issuerSegmentations, setIssuerSegmentations] = useState([]);\n  useEffect(() => {\n    if (region) {\n      setIssuerSegmentations([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/issuer-segmentations?region=${region}`);\n        setIssuerSegmentations(data);\n        const match = data.find(item => item._id === issuerSegmentation)\n        if (!match) {\n          setIssuerSegmentation(null);\n        }\n      })()\n    } else {\n      setIssuerSegmentations([]);\n    }\n  }, [region, setIssuerSegmentation])\n  return (\n    <>\n      <Text type=\"primary\" strong>Issuer Segmentation</Text>\n      <br />\n      <Select value={issuerSegmentation} size='large' style={{ width: '100%' }} onChange={setIssuerSegmentation} loading={!issuerSegmentations.length}>\n        <Option value={null}>Select IssuerSegmentation</Option>\n        {\n          issuerSegmentations && issuerSegmentations.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default IssuerSegmentationSelector\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport { Select, Typography } from 'antd';\nimport Axios from 'axios';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst LangSelector = ({ country, lang, setLang }) => {\n  const [langs, setLangs] = useState([]);\n  useEffect(() => {\n    if (country) {\n      setLangs([]);\n      (async () => {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/languages?country=${country}`);\n        setLangs(data);\n        const match = data.find(item => item._id === lang)\n        if (!match) {\n          setLang(null);\n        }\n      })()\n    } else {\n      setLangs([]);\n    }\n  }, [country, setLang])\n  return (\n    <>\n      <Text type=\"primary\" strong>Language</Text>\n      <br />\n      <Select value={lang} size='large' style={{ width: '100%' }} onChange={setLang} loading={!langs.length}>\n        <Option value={null}>Select Lang</Option>\n        {\n          langs && langs.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br />\n      <br/>\n    </>\n  )\n}\n\nexport default LangSelector\n","import React from 'react'\n\nimport RegionSelector from './RegionSelector';\nimport CountrySelector from './CountrySelector';\nimport MarketSelector from './MarketSelector';\nimport IssuerSegmentationSelector from './IssuerSegmentationSelector';\nimport LangSelector from './LangSelector';\nimport { Input, Typography } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nconst CreateUpdateUserForm = (props) => {\n  const {\n    name, setName,\n    region, setRegion,\n    country, setCountry,\n    market, setMarket,\n    issuerSegmentation, setIssuerSegmentation,\n    lang, setLang\n  } = props\n  return (\n    <>\n      <Text type=\"primary\" strong>Name</Text>\n      <br />\n      <Input style={{ width: '100%' }} value={name} onChange={e => setName(e.target.value)} size=\"large\" placeholder=\"Enter Name\" prefix={<UserOutlined />} />\n      <br />\n      <RegionSelector {...{ region, setRegion }} />\n      <MarketSelector {...{ region, market, setMarket }} />\n      <IssuerSegmentationSelector {...{ region, issuerSegmentation, setIssuerSegmentation }} />\n      <CountrySelector {...{ region, country, setCountry }} />\n      <LangSelector {...{ country, lang, setLang }} />\n    </>\n  )\n}\n\nexport default CreateUpdateUserForm\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router'\nimport Axios from 'axios'\nimport { message, Row, Col, Card, Skeleton, Button, Space, Spin, PageHeader } from 'antd'\nimport CreateUpdateUserForm from '../components/CreateUpdateUserForm'\n\nconst CreateUpdateUser = () => {\n  const history = useHistory();\n  const { _id } = useParams()\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState(null);\n  const [region, setRegion] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [lang, setLang] = useState(null);\n  const [market, setMarket] = useState(null);\n  const [issuerSegmentation, setIssuerSegmentation] = useState(null);\n\n  useEffect(() => {\n    if (_id) {\n      (async () => {\n        setLoading(true);\n        try {\n          const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/users/${_id}`);\n          init(data)\n        } catch (e) {\n          message.error(e.message, 3)\n          setLoading(false)\n        }\n      })()\n    }\n  }, [_id])\n  const init = (user) => {\n    setName(user.name)\n    setRegion(user.region._id)\n    setMarket(user.market._id)\n    setIssuerSegmentation(user.issuerSegmentation._id)\n    setCountry(user.country._id)\n    setLang(user.lang._id)\n    setLoading(false)\n  }\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n      if (_id) {\n        await Axios.put(`${process.env.REACT_APP_API_URL}/users/${_id}`, { name, region, country, lang: lang, market, issuerSegmentation });\n        message.success('User Updated Successfully', 3)\n      } else {\n        await Axios.post(`${process.env.REACT_APP_API_URL}/users`, { name, region, country, lang: lang, market, issuerSegmentation });\n        message.success('User Created Successfully', 3)\n      }\n      history.push('/users')\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/users')}\n        title=\"Users\"\n      />\n      <Row>\n        <Col span={8} />\n        <Col span={8}>\n          <Card bordered>\n            <h2>{_id ? 'Update User' : 'Create User'}</h2>\n            {!loading\n              ? <>\n                <Spin size=\"large\" spinning={submitting}>\n                  <CreateUpdateUserForm {\n                    ...{\n                      name, setName,\n                      region, setRegion,\n                      country, setCountry,\n                      market, setMarket,\n                      issuerSegmentation, setIssuerSegmentation,\n                      lang, setLang\n                    }\n                  } />\n                  <Space style={{ float: 'left' }}>\n                    <Button onClick={() => { history.push('/users') }} size=\"large\" >Cancel</Button>\n                  </Space>\n                  <Space style={{ float: 'right' }}>\n                    <Button disabled={!name || !region || !country || !market || !issuerSegmentation || !lang} onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n                  </Space>\n                </Spin>\n              </>\n              : <Skeleton active paragraph={{ rows: 10 }} />\n            }\n          </Card>\n        </Col>\n        <Col span={8} />\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateUser\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Card, Button, Typography, message, Skeleton, Tag, Input, Spin } from 'antd'\nimport { PlusOutlined, SettingOutlined, EditOutlined } from '@ant-design/icons'\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'antd/lib/modal/Modal';\nconst { Title } = Typography;\nconst Contents = () => {\n  const history = useHistory();\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const [showUpdateModal, setShowUpdateModal] = useState(false)\n  const [contents, setContents] = useState();\n  const [contentTitle, setContentTitle] = useState();\n  const [currentContent, setCurrentContent] = useState();\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/contents`);\n        setContents(data)\n      } catch (e) {\n        message.error(e.message, 3)\n      }\n    })()\n  }, []);\n  const handleCreate = async () => {\n    if (contentTitle) {\n      setSubmitting(true)\n      try {\n        const { data } = await Axios.post(`${process.env.REACT_APP_API_URL}/contents`, { title: contentTitle });\n        setContents([data, ...contents])\n        setShowCreateModal(false)\n        setSubmitting(false)\n        setContentTitle(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  const handleUpdate = async () => {\n    if (currentContent && currentContent.title) {\n\n      setSubmitting(true)\n      try {\n        const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${currentContent._id}`, { title: currentContent.title });\n        const updated = contents.map(content => {\n          if (content._id === data._id) {\n            return data;\n          }\n          return content\n        })\n        setContents(updated)\n        setShowUpdateModal(false)\n        setSubmitting(false)\n        setCurrentContent(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Contents</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => setShowCreateModal(true)}>\n            <PlusOutlined /> Create Content\n          </Button>\n          <Row style={{ marginTop: 20 }}>\n            {\n              contents\n                ? contents.map(\n                  item => <Col span={8}>\n                    <Card key={item._id}\n                      style={{ width: 500, marginTop: 16 }}\n                      actions={[\n                        <><SettingOutlined key=\"rules\" onClick={() => history.push(`/contents/${item._id}`)} /> Rules</>,\n                        <><EditOutlined key=\"edit\" onClick={() => { setCurrentContent(item); setShowUpdateModal(true) }} />Edit</>\n                      ]}\n                    >\n                      <Avatar shape=\"circle\" size={100} src={item.image} />\n                      <h2 style={{ display: 'inline-block' }}>\n                        {item.title}\n                        <br />\n                        {\n                          item.rules && item.rules.length > 0\n                            ? <Tag color=\"green\"><strong>Rules Applied</strong></Tag>\n                            : <Tag color=\"red\"><strong>No Rules</strong></Tag>\n                        }\n                      </h2>\n                    </Card>\n                  </Col>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </Row>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Create Content\"\n        visible={showCreateModal}\n        okText='Create'\n        onOk={handleCreate}\n        onCancel={() => setShowCreateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          <Input placeholder=\"Content Title\"\n            value={contentTitle}\n            onChange={e => setContentTitle(e.target.value)}\n          />\n        </Spin>\n      </Modal>\n      <Modal\n        title=\"Update Content\"\n        visible={showUpdateModal}\n        onOk={handleUpdate}\n        okText='Update'\n        onCancel={() => setShowUpdateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          {\n            currentContent\n              ? <Input placeholder=\"Content Title\"\n                value={currentContent.title}\n                onChange={e => { setCurrentContent({ ...currentContent, title: e.target.value }) }}\n              />\n              : ''\n          }\n        </Spin>\n      </Modal>\n    </>\n  )\n}\n\nexport default Contents\n","import React, { useState, useEffect } from 'react'\nimport { List, Row, Col, Card, message, Skeleton, Spin, Typography, Divider, Result, Button, Space, PageHeader, Radio } from 'antd'\nimport RuleList from '../components/RuleList'\nimport { useParams, useHistory } from 'react-router';\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { DeleteOutlined, FundViewOutlined } from '@ant-design/icons'\nconst { Title, Text } = Typography\nconst ConfigureContentRules = () => {\n  const history = useHistory();\n  const { _id } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [content, setContent] = useState();\n  const [updatingRules, setUpdatingRules] = useState(false);\n  const [search, setSearch] = useState();\n  const onRuleSelect = async (newRuleId) => {\n    // get current rule list , add this rule to that & update the content with it\n    const ruleIds = content.rules.map(({ _id }) => _id)\n    if (ruleIds.indexOf(newRuleId) === -1) {\n      setUpdatingRules(true)\n      ruleIds.push(newRuleId)\n      try {\n        const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { rules: ruleIds });\n        setContent(data);\n        setUpdatingRules(false)\n      } catch (e) {\n        message.error(e.message)\n        setUpdatingRules(false)\n      }\n    } else {\n      message.warn('The rule you are trying to apply, is already applied to this content', 5)\n    }\n  }\n  const onRuleRemove = async (ruleToRemove) => {\n    setUpdatingRules(true)\n    let ruleIds = content.rules.map(({ _id }) => _id)\n    ruleIds = ruleIds.filter(_id => _id !== ruleToRemove)\n    try {\n      const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { rules: ruleIds });\n      setContent(data);\n      setUpdatingRules(false)\n    } catch (e) {\n      message.error(e.message)\n      setUpdatingRules(false)\n    }\n  }\n  const updateRuleMatchType = async (ruleMatchType) => {\n    setUpdatingRules(true)\n    try {\n      const { data } = await Axios.put(`${process.env.REACT_APP_API_URL}/contents/${_id}`, { ruleMatchType });\n      setContent(data);\n      setUpdatingRules(false)\n      message.success(`Updated: ${ruleMatchType} rule(s) will be matched during content targetting for users!`)\n    } catch (e) {\n      message.error(e.message)\n      setUpdatingRules(false)\n    }\n  }\n  useEffect(() => {\n    if (_id) {\n      setLoading(true)\n      try {\n        (async () => {\n          const { data } = await Axios.get(`${process.env.REACT_APP_API_URL}/contents/${_id}`);\n          setContent(data)\n          setLoading(false)\n        })()\n      } catch (e) {\n        message.error(e.message)\n        setLoading(false)\n      }\n    }\n  }, [_id])\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/contents')}\n        title=\"Back\"\n        subTitle=\"Manage rules associated with content\"\n      />\n\n      <Row>\n        <Col span={12}>\n          <Card title=\"Content Details\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <Spin size=\"large\" spinning={loading}>\n              {\n                content ?\n                  <>\n                    <Row>\n                      <Col span=\"6\">\n                        <Avatar shape=\"circle\" size={50} src={content.image} />\n                      </Col>\n                      <Col span=\"18\">\n                        <Title level={4} style={{ marginTop: 20 }}>{content.title}</Title>\n                      </Col>\n                    </Row>\n                    <Divider orientation=\"left\">Rules</Divider>\n                    {\n                      updatingRules\n                        ? <Skeleton active paragraph={{ rows: 20 }}></Skeleton>\n                        : content.rules && content.rules.length > 0\n                          ? <>\n                            <Text type=\"primary\" strong>Match Type</Text>\n                            <br />\n                            <Radio.Group\n                              options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n                              onChange={e => updateRuleMatchType(e.target.value)}\n                              value={content.ruleMatchType}\n                              optionType=\"button\"\n                              buttonStyle=\"solid\"\n                            />\n                            <br />\n                            <List\n                              size=\"large\"\n                              bordered\n                              dataSource={content.rules}\n                              renderItem={\n                                item => <List.Item>\n                                  <Text>{item.title}</Text>\n                                  <Space>\n                                    <Button onClick={() => onRuleRemove(item._id)} title=\"Remove Rule\" type=\"danger\" shape=\"circle\" icon={<DeleteOutlined />} />\n                                    <Button onClick={() => setSearch(item.title)} type=\"primary\" icon={<FundViewOutlined />}>View Dteails</Button>\n                                  </Space>\n                                </List.Item>\n                              }\n                            />\n                          </>\n                          : <Result\n                            status=\"404\"\n                            title=\"No Rules Applied\"\n                            subTitle=\"Search rules from sidebar & click to apply\"\n                            extra={<Title level={4}>This content is visible to all by default!</Title>}\n                          />\n                    }\n                  </>\n                  : ''\n              }\n            </Spin>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Search & Apply Rules\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <div style={{ height: '90vh', overflowY: 'auto' }}>\n              <RuleList search={search} lazy clickAction={onRuleSelect}></RuleList>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ConfigureContentRules\n","import React from 'react';\nimport { Layout, Menu, Result, Button } from 'antd';\nimport { ScheduleOutlined, UsergroupAddOutlined, LoginOutlined, PicLeftOutlined } from '@ant-design/icons';\nimport { NavLink, useLocation, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport Rules from './pages/Rules';\nimport CreateUpdateRule from './pages/CreateUpdateRule';\nimport Users from './pages/Users';\nimport CreateUpdateUser from './pages/CreateUpdateUser';\nimport Contents from './pages/Contents';\nimport ConfigureContentRules from './pages/ConfigureContentRules';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const location = useLocation();\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Link to=\"/\">\n          <div className=\"logo\" >RULE ENGINE DEMO</div>\n        </Link>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname,]}>\n          <Menu.Item key=\"/users\">\n            <NavLink to=\"/users\">\n              <UsergroupAddOutlined />\n              <strong>Users</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/rules\">\n            <NavLink to=\"/rules\">\n              <ScheduleOutlined />\n              <strong>Rules</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/contents\">\n            <NavLink to=\"/contents\">\n              <PicLeftOutlined />\n              <strong>Contents</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/simulate\">\n            <NavLink to=\"/simulate\">\n              <LoginOutlined />\n              <strong>Simulate User Session</strong>\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content>\n        <div style={{ backgroundColor: 'white', minHeight: '100vh' }}>\n          <Switch>\n            <Route path=\"/simulate\">\n              <Result\n                status=\"500\"\n                title=\"Working on It\"\n                subTitle=\"Sit back & Relax, this feature will be added soon\"\n                extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n              />\n            </Route>\n            <Route path=\"/contents/:_id\">\n              <ConfigureContentRules />\n            </Route>\n            <Route path=\"/contents\">\n              <Contents />\n            </Route>\n            <Route path=\"/rules/create\">\n              <CreateUpdateRule />\n            </Route>\n            <Route path=\"/rules/update/:_id\">\n              <CreateUpdateRule />\n            </Route>\n            <Route path=\"/rules\">\n              <Rules />\n            </Route>\n            <Route path=\"/users/create\">\n              <CreateUpdateUser />\n            </Route>\n            <Route path=\"/users/update/:_id\">\n              <CreateUpdateUser />\n            </Route>\n            <Route path=\"/users\">\n              <Users />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/users\" />\n            </Route>\n          </Switch>\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport './index.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}