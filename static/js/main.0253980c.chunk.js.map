{"version":3,"sources":["components/RuleList.js","pages/Rules.js","components/CreateUpdateRuleForm.js","pages/CreateUpdateRule.js","components/UserDetails.js","pages/Users.js","components/RegionSelector.js","components/CountrySelector.js","components/MarketSelector.js","components/IssuerSegmentationSelector.js","components/LangSelector.js","components/CreateUpdateUserForm.js","pages/CreateUpdateUser.js","pages/Contents.js","pages/ConfigureContentRules.js","components/UserContents.js","pages/SimulateUserSession.js","App.js","index.js"],"names":["fetchRules","_key","region","keyword","a","url","URL","process","searchParams","append","fetch","response","json","RuleList","lazy","search","clickAction","history","useHistory","useState","setKeyword","useQuery","enabled","length","rules","data","status","useEffect","flex","style","padding","background","size","allowClear","placeholder","value","onChange","e","target","active","paragraph","rows","marginTop","map","item","onClick","_id","push","key","bordered","width","hoverable","display","title","fontSize","color","conditionMatchType","regions","countries","RightCircleOutlined","index","languages","markets","issuerSegmentations","Title","Typography","Rules","type","level","strong","PlusOutlined","Text","Option","Select","CreateUpdateRuleForm","loading","filteredData","setTitle","matchType","setMatchType","selectedRegions","setSelectedRegions","selectedMarkets","setSelectedMarkets","selectedCountries","setSelectedCountries","selectedLanguages","setSelectedLanguages","selectedIssuerSegmentations","setSelectedIssuerSegmentations","mode","filterOption","optionFilterProp","optionLabelProp","label","Group","options","optionType","buttonStyle","values","CreateUpdateRule","useParams","setLoading","submitting","setSubmitting","setData","setFilteredData","init","Axios","get","initFormData","message","error","rule","filter","indexOf","find","onRegionSelect","country","onCountrySelect","handleSubmit","body","put","success","post","className","onBack","subTitle","spinning","float","disabled","UserDetails","user","shape","src","image","name","lang","market","issuerSegmentation","fetchUsers","res","Users","userList","to","avatar","fetchRegions","RegionSelector","setRegion","fetchCountries","CountrySelector","setCountry","fetchMarkets","MarketSelector","setMarket","fetchSegments","IssuerSegmentationSelector","setIssuerSegmentation","fetchLanguages","LangSelector","setLang","langs","CreateUpdateUserForm","props","setName","prefix","UserOutlined","addUserMutation","method","headers","JSON","stringify","updateUserMutation","fetchUser","CreateUpdateUser","useMutation","onSuccess","queryCache","invalidateQueries","addUser","updateUser","span","fetchContents","addContentMutation","content","updateContentMutation","Contents","contents","addContent","updateContent","showCreateModal","setShowCreateModal","showUpdateModal","setShowUpdateModal","contentTitle","setContentTitle","currentContent","setCurrentContent","handleCreate","handleUpdate","actions","SettingOutlined","EditOutlined","visible","okText","onOk","onCancel","fetchContent","ConfigureContentRules","setUpdatingRules","updatingRules","setSearch","setLazy","onRuleSelect","newRuleId","ruleIds","warn","onRuleRemove","ruleToRemove","updateRuleMatchType","ruleMatchType","extra","minHeight","orientation","dataSource","renderItem","Item","icon","DeleteOutlined","FundViewOutlined","checkedChildren","unCheckedChildren","height","overflowY","userId","UserContents","gutter","SimulateUserSession","currentUser","setCurrentUser","textAlign","showSearch","input","option","children","toLowerCase","Header","Layout","Content","Footer","App","localStorage","getItem","accepted","setAccepted","notification","warning","duration","description","setItem","onClose","location","useLocation","theme","selectedKeys","pathname","UsergroupAddOutlined","ScheduleOutlined","PicLeftOutlined","LoginOutlined","href","GithubOutlined","backgroundColor","path","paddingTop","ReactDOM","render","basename","initialIsOpen","document","getElementById"],"mappings":"kdAKMA,EAAU,uCAAG,WAAOC,EAAMC,EAAQC,GAArB,iBAAAC,EAAA,6DACXC,EAAM,IAAIC,IAAJ,UAAWC,6CAAX,WACRL,GACFG,EAAIG,aAAaC,OAAO,UAAWP,GAEjCC,GACFE,EAAIG,aAAaC,OAAO,UAAWN,GANpB,SAQMO,MAAML,GARZ,cAQXM,EARW,yBASVA,EAASC,QATC,2CAAH,0DAmHDC,EAxGE,SAAC,GAA0D,IAAxDX,EAAuD,EAAvDA,OAAuD,IAA/CY,YAA+C,SAAjCC,EAAiC,EAAjCA,OAAiC,IAAzBC,mBAAyB,MAAX,KAAW,EACnEC,EAAUC,cADyD,EAE3CC,qBAF2C,mBAElEhB,EAFkE,KAEzDiB,EAFyD,OAG5CC,YAAS,CAAC,aAAcnB,EAAQC,GAAUH,EAAY,CAACsB,SAAWR,GAASA,GAAQX,GAAWA,EAAQoB,OAAS,IAAhIC,EAH6D,EAGlEC,KAAYC,EAHsD,EAGtDA,OACnBC,qBAAU,WACJZ,GACFK,EAAWL,KAEZ,CAACA,IAQJ,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKa,KAAK,IAAIC,MAAO,CAAEC,QAAS,GAAIC,WAAY,YAE5CjB,EACI,kBAAC,IAAD,CAAOkB,KAAK,QAAQC,YAAU,EAACC,YAAY,oBAAoBC,MAAOhC,EAASiC,SAAU,SAAAC,GAAC,OAAIjB,EAAWiB,EAAEC,OAAOH,UAClH,GAGO,YAAXT,EACE,oCACE,kBAAC,IAAD,CAAUa,QAAM,EAACC,UAAW,CAAEC,KAAM,KACpC,kBAAC,IAAD,CAAUF,QAAM,EAACC,UAAW,CAAEC,KAAM,KACpC,kBAAC,IAAD,CAAUF,QAAM,EAACC,UAAW,CAAEC,KAAM,KACpC,kBAAC,IAAD,CAAUF,QAAM,EAACC,UAAW,CAAEC,KAAM,MAEpC,GAEN,yBAAKZ,MAAO,CAAEa,UAAW,KAErBlB,GAAoB,YAAXE,EACLF,EAAMmB,KACN,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAMC,QAAS,kBA9BlBC,EA8BoCF,EAAKE,SA7BxD9B,EACFA,EAAY8B,GAEZ7B,EAAQ8B,KAAK,iBAAmBD,IAJhB,IAACA,GA8B+CE,IAAKJ,EAAKE,IAAKG,UAAQ,EAACpB,MAAO,CAAEqB,MAAO,OAAQR,UAAW,IAC7GS,WAAS,GACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKvB,KAAK,KACR,wBAAIC,MAAO,CAAEuB,QAAS,iBACnBR,EAAKS,QAGV,kBAAC,IAAD,CAAKzB,KAAK,KACR,kBAAC,IAAD,CAAKC,MAAO,CAAEyB,SAAU,IAAMC,MAAM,QAApC,gBAAwD,gCAASX,EAAKY,qBACtE,kBAAC,IAAD,CAAK3B,MAAO,CAAEyB,SAAU,IAAMC,MAAM,WAApC,aAAwD,gCAASX,EAAKa,QAAQd,KAAI,SAAAzC,GAAM,MAAI,IAAMA,EAAOmD,WAEvGT,EAAKc,WACFd,EAAKc,UAAUnC,OAChB,kBAAC,IAAD,CAAKM,MAAO,CAAEyB,SAAU,IAAMC,MAAM,UAApC,cACW,kBAACI,EAAA,EAAD,MACX,gCACGf,EAAKc,UAAUf,KAAI,SAACR,EAAOyB,GAAR,MAAkB,UAAGA,EAAQ,EAAI,MAAQ,MAASzB,EAAMkB,WAEvE,GAGTT,EAAKiB,WACFjB,EAAKiB,UAAUtC,OAChB,kBAAC,IAAD,CAAKM,MAAO,CAAEyB,SAAU,IAAMC,MAAM,SAApC,cACW,kBAACI,EAAA,EAAD,MACX,gCACGf,EAAKiB,UAAUlB,KAAI,SAACR,EAAOyB,GAAR,MAAkB,UAAGA,EAAQ,EAAI,MAAQ,MAASzB,EAAMkB,WAEvE,GAGTT,EAAKkB,SACFlB,EAAKkB,QAAQvC,OACd,kBAAC,IAAD,CAAKM,MAAO,CAAEyB,SAAU,IAAMC,MAAM,QAApC,YACS,kBAACI,EAAA,EAAD,MACT,gCACGf,EAAKkB,QAAQnB,KAAI,SAACR,EAAOyB,GAAR,MAAkB,UAAGA,EAAQ,EAAI,MAAQ,MAASzB,EAAMkB,WAErE,GAGTT,EAAKmB,qBACFnB,EAAKmB,oBAAoBxC,OAC1B,kBAAC,IAAD,CAAKM,MAAO,CAAEyB,SAAU,IAAMC,MAAM,UAApC,yBACsB,kBAACI,EAAA,EAAD,MACtB,gCACGf,EAAKmB,oBAAoBpB,KAAI,SAACR,EAAOyB,GAAR,MAAkB,UAAGA,EAAQ,EAAI,MAAQ,MAASzB,EAAMkB,WAEjF,SAOjB,QC1GVW,EAAUC,IAAVD,MAoBOE,EAlBD,WACZ,IAAMjD,EAAUC,cAChB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,KAAK,IAAIC,MAAO,CAAEC,QAAS,GAAIC,WAAY,YAC9C,kBAACiC,EAAD,CAAOG,KAAK,UAAUC,MAAO,EAAGC,QAAM,GAAtC,SACA,6BACA,kBAAC,IAAD,CAAQrC,KAAK,QAAQmC,KAAK,UAAUtB,QAAS,kBAAM5B,EAAQ8B,KAAK,mBAC9D,kBAACuB,EAAA,EAAD,MADF,gBAGA,kBAAC,EAAD,U,+EChBFC,EAASN,IAATM,KACAC,EAAWC,IAAXD,OAuIOE,EArIc,SAAC,GAWvB,IAVLC,EAUI,EAVJA,QACAlD,EASI,EATJA,KACAmD,EAQI,EARJA,aACAvB,EAOI,EAPJA,MAAOwB,EAOH,EAPGA,SACPC,EAMI,EANJA,UAAWC,EAMP,EANOA,aACXC,EAKI,EALJA,gBAAiBC,EAKb,EALaA,mBACjBC,EAII,EAJJA,gBAAiBC,EAIb,EAJaA,mBACjBC,EAGI,EAHJA,kBAAmBC,EAGf,EAHeA,qBACnBC,EAEI,EAFJA,kBAAmBC,EAEf,EAFeA,qBACnBC,EACI,EADJA,4BAA6BC,EACzB,EADyBA,+BAG7B,OACE,oCAEId,EACI,kBAAC,IAAD,CAAUpC,QAAM,EAACC,UAAW,CAAEC,KAAM,MACpC,GAELhB,EACG,oCACA,kBAAC8C,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,SACA,kBAAC,IAAD,CAAOxC,MAAO,CAAEqB,MAAO,QAAUf,MAAOkB,EAAOjB,SAAU,SAAAC,GAAC,OAAIwC,EAASxC,EAAEC,OAAOH,QAAQH,KAAK,QAAQE,YAAY,gBACjH,6BACA,kBAACqC,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,wBACA,kBAAC,IAAD,CACElC,MAAO6C,EACP5C,SAAU,SAAAqB,GAAO,OAAIwB,EAAmBxB,IACxCiC,KAAK,WACL1D,KAAK,QACL2D,cAAY,EACZC,iBAAiB,QACjB1D,YAAY,iBACZL,MAAO,CAAEqB,MAAO,QAChB2C,gBAAgB,SAGdpE,EAAKgC,QAAQd,KAAI,SAAAC,GACf,OAAO,kBAAC4B,EAAD,CAAQxB,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,IAAKgD,MAAOlD,EAAKS,OAAQT,EAAKS,WAI9E,wBAAIxB,MAAO,CAACa,UAAW,SAAvB,wBACA,kBAAC6B,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,cACA,6BACA,kBAAC,IAAM0B,MAAP,CACEC,QAAS,CAAC,CAAEF,MAAO,YAAa3D,MAAO,OAAS,CAAE2D,MAAO,YAAa3D,MAAO,QAC7EC,SAAU,SAAAC,GAAC,OAAG0C,EAAa1C,EAAEC,OAAOH,QACpCA,MAAO2C,EACPmB,WAAW,SACXC,YAAY,UAEd,6BACA,kBAAC3B,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,WACA,kBAAC,IAAD,CACElC,MAAO+C,EACP9C,SAAU,SAAC0B,GAAD,OAAaqB,EAAmBrB,IAC1C4B,KAAK,WACLC,cAAY,EACZC,iBAAiB,QACjB5D,KAAK,QACLE,YAAY,iBACZL,MAAO,CAAEqB,MAAO,QAChB2C,gBAAgB,SAGdjB,GAAgBA,EAAad,SAAWc,EAAad,QAAQnB,KAAI,SAAAC,GAC/D,OAAO,kBAAC4B,EAAD,CAAQxB,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,IAAKgD,MAAOlD,EAAKS,OAAQT,EAAKS,WAI9E,kBAACkB,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,wBACA,kBAAC,IAAD,CACElC,MAAOqD,EACPpD,SAAU,SAAA+D,GAAM,OAAIV,EAA+BU,IACnDT,KAAK,WACL1D,KAAK,QACLE,YAAY,uBACZL,MAAO,CAAEqB,MAAO,QAChByC,cAAY,EACZC,iBAAiB,QACjBC,gBAAgB,SAGdjB,GAAgBA,EAAab,qBAAuBa,EAAab,oBAAoBpB,KAAI,SAAAC,GACvF,OAAO,kBAAC4B,EAAD,CAAQxB,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,IAAKgD,MAAOlD,EAAKS,OAAQT,EAAKS,WAI9E,kBAACkB,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,aACA,kBAAC,IAAD,CACEqB,KAAK,WACL1D,KAAK,QACLE,YAAY,mBACZL,MAAO,CAAEqB,MAAO,QAChBf,MAAOiD,EACPhD,SAAU,SAAAsB,GAAS,OAAI2B,EAAqB3B,IAC5CiC,cAAY,EACZC,iBAAiB,QACjBC,gBAAgB,SAGdjB,GAAgBA,EAAalB,WAAakB,EAAalB,UAAUf,KAAI,SAAAC,GACnE,OAAO,kBAAC4B,EAAD,CAAQxB,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,IAAKgD,MAAOlD,EAAKS,OAAQT,EAAKS,WAI9E,kBAACkB,EAAD,CAAMJ,KAAK,UAAUE,QAAM,GAA3B,aACA,kBAAC,IAAD,CACElC,MAAOmD,EACPlD,SAAU,SAAAyB,GAAS,OAAI0B,EAAqB1B,IAC5C6B,KAAK,WACL1D,KAAK,QACLE,YAAY,mBACZL,MAAO,CAAEqB,MAAO,QAChB2C,gBAAgB,QAChBF,cAAY,EACZC,iBAAiB,SAGfhB,GAAgBA,EAAaf,WAAae,EAAaf,UAAUlB,KAAI,SAAAC,GACnE,OAAO,kBAAC4B,EAAD,CAAQxB,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,IAAKgD,MAAOlD,EAAKS,OAAQT,EAAKS,YAK9E,KCqDK+C,EAlLU,WACvB,IAAMnF,EAAUC,cACR4B,EAAQuD,cAARvD,IAFqB,EAGC3B,oBAAS,GAHV,mBAGtBwD,EAHsB,KAGb2B,EAHa,OAIOnF,oBAAS,GAJhB,mBAItBoF,EAJsB,KAIVC,EAJU,OAKLrF,qBALK,mBAKtBM,EALsB,KAKhBgF,EALgB,OAMWtF,mBAAS,IANpB,mBAMtByD,EANsB,KAMR8B,EANQ,OAOiBvF,mBAAS,IAP1B,mBAOtB6D,EAPsB,KAOLC,EAPK,OAQiB9D,mBAAS,IAR1B,mBAQtB+D,EARsB,KAQLC,EARK,OASqBhE,mBAAS,IAT9B,mBAStBiE,EATsB,KASHC,EATG,OAUqBlE,mBAAS,IAV9B,mBAUtBmE,EAVsB,KAUHC,EAVG,OAWyCpE,mBAAS,IAXlD,mBAWtBqE,EAXsB,KAWOC,GAXP,QAYHtE,qBAZG,qBAYtBkC,GAZsB,MAYfwB,GAZe,SAaK1D,mBAAS,OAbd,qBAatB2D,GAbsB,MAaXC,GAbW,MAcvB4B,GAAI,uCAAG,8CAAAvG,EAAA,6DACXkG,GAAW,GADA,kBAGuBM,IAAMC,IAAN,UAAatG,6CAAb,aAHvB,uBAGKkD,EAHL,EAGDhC,KAHC,SAIuBmF,IAAMC,IAAN,UAAatG,6CAAb,aAJvB,uBAIKuD,EAJL,EAIDrC,KAJC,UAKmCmF,IAAMC,IAAN,UAAatG,6CAAb,0BALnC,wBAKKwD,EALL,EAKDtC,KALC,UAMyBmF,IAAMC,IAAN,UAAatG,6CAAb,eANzB,wBAMKmD,EANL,EAMDjC,KANC,UAOyBmF,IAAMC,IAAN,UAAatG,6CAAb,eAPzB,iBAOKsD,EAPL,EAODpC,KACRgF,EAAQ,CAAEhD,UAASK,UAASC,sBAAqBL,YAAWG,cACxDf,GACFgE,KAEFR,GAAW,GAZF,kDAcTA,GAAW,GACXS,IAAQC,MAAM,KAAED,QAAS,GAfhB,0DAAH,qDAmBJD,GAAY,uCAAG,8BAAA1G,EAAA,sEACUwG,IAAMC,IAAN,UAAatG,6CAAb,kBAAoDuC,IAD9D,gBACLmE,EADK,EACXxF,KACRoD,GAASoC,EAAK5D,OACd0B,GAAakC,EAAKzD,oBAClB+B,EAAqB0B,EAAKpD,WAC1BsB,EAAmB8B,EAAKnD,SACxB2B,GAA+BwB,EAAKlD,qBACpCsB,EAAqB4B,EAAKvD,WAC1BuB,EAAmBgC,EAAKxD,SARL,4CAAH,qDAkDlB9B,qBAAU,WACRgF,OACC,IAEHhF,qBAAU,WACJqD,GA7CiB,WACrB,GAAIvD,EAAM,CACR,IAAMqC,EAAUrC,EAAKqC,QAAQoD,QAAO,gBAAGhH,EAAH,EAAGA,OAAH,OAAqD,IAArC8E,EAAgBmC,QAAQjH,MACtE6D,EAAsBtC,EAAKsC,oBAAoBmD,QAAO,gBAAGhH,EAAH,EAAGA,OAAH,OAAqD,IAArC8E,EAAgBmC,QAAQjH,MAC9FwD,EAAYjC,EAAKiC,UAAUwD,QAAO,gBAAGhH,EAAH,EAAGA,OAAH,OAAqD,IAArC8E,EAAgBmC,QAAQjH,MAEhFiF,EAAmBD,EAAgBgC,QAAO,SAAA/E,GACxC,IAAMG,EAASb,EAAKqC,QAAQsD,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQX,KACtD,OAAmD,IAA5C6C,EAAgBmC,QAAQ7E,EAAOpC,YAExCuF,GAA+BD,EAA4B0B,QACzD,SAAA/E,GACE,IAAMG,EAASb,EAAKsC,oBAAoBqD,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQX,KAClE,OAAmD,IAA5C6C,EAAgBmC,QAAQ7E,EAAOpC,YAG1CmF,EAAqBD,EAAkB8B,QACrC,SAAA/E,GACE,IAAMG,EAASb,EAAKiC,UAAU0D,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQX,KACxD,OAAmD,IAA5C6C,EAAgBmC,QAAQ7E,EAAOpC,YAI1CwG,EAAgB,CAAE5C,UAASC,sBAAqBL,eAuBhD2D,KAED,CAACrC,IAEJrD,qBAAU,WACJyD,GAzBkB,WACtB,GAAI3D,EAAM,CAER8D,EAAqBD,EAAkB4B,QACrC,SAAA/E,GACE,IAAMG,EAASb,EAAKoC,UAAUuD,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQX,KACxD,OAAsD,IAA/CiD,EAAkB+B,QAAQ7E,EAAOgF,aAI5C,IAAMzD,EAAYpC,EAAKoC,UAAUqD,QAAO,gBAAGI,EAAH,EAAGA,QAAH,OAAyD,IAAxClC,EAAkB+B,QAAQG,MACnFZ,EAAgB,2BAAK9B,GAAN,IAAoBf,gBAenC0D,KAED,CAACnC,IAEJ,IAAMoC,GAAY,uCAAG,4BAAApH,EAAA,yDACnBoG,GAAc,GAEiB,IAA7BpB,EAAkB7D,QACc,IAA7B+D,EAAkB/D,QACS,IAA3B2D,EAAgB3D,QACuB,IAAvCiE,EAA4BjE,OANd,uBAQjBwF,IAAQC,MAAM,iDAAkD,GAChER,GAAc,GATG,6BAYbiB,EAAO,CACXpE,SACAI,QAASuB,EACTxB,mBAAoBsB,GACpBpB,UAAW0B,EACXtB,QAASoB,EACTrB,UAAWyB,EACXvB,oBAAqByB,GAnBJ,UAsBb1C,EAtBa,kCAuBT8D,IAAMc,IAAN,UAAanH,6CAAb,kBAAoDuC,GAAO2E,GAvBlD,QAwBfV,IAAQY,QAAQ,4BAA6B,GAC7C1G,EAAQ8B,KAAK,UAzBE,yCA2BT6D,IAAMgB,KAAN,UAAcrH,6CAAd,UAAqDkH,GA3B5C,QA4BfV,IAAQY,QAAQ,4BAA6B,GAC7C1G,EAAQ8B,KAAK,UA7BE,0DAgCjBgE,IAAQC,MAAM,KAAED,QAAS,GACzBP,GAAc,GAjCG,0DAAH,qDAqClB,OACE,oCACE,kBAAC,IAAD,CACEqB,UAAU,mBACVC,OAAQ,kBAAM7G,EAAQ8B,KAAK,WAC3BM,MAAM,gBACN0E,SAAS,yCAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKnG,KAAK,MACV,kBAAC,IAAD,CAAKA,KAAK,KACR,kBAAC,IAAD,CAAMqB,UAAQ,GACZ,4BAAKH,EAAM,cAAgB,eAC3B,kBAAC,IAAD,CAAMd,KAAK,QAAQgG,SAAUzB,GAC3B,kBAAC,EAAyB,CACxB5B,UAAS2B,aACT7E,OAAMgF,UACN7B,eAAc8B,kBACd1B,kBAAiBC,qBACjBC,kBAAiBC,qBACjBC,oBAAmBC,uBACnBC,oBAAmBC,uBACnBC,8BAA6BC,kCAC7BpC,SAAOwB,YACPC,aAAWC,kBAEb,kBAAC,IAAD,CAAOlD,MAAO,CAAEoG,MAAO,OAAQvF,UAAW,SACxC,kBAAC,IAAD,CAAQG,QAAS,WAAQ5B,EAAQ8B,KAAK,WAAaf,KAAK,SAAxD,WAEF,kBAAC,IAAD,CAAOH,MAAO,CAAEoG,MAAO,QAASvF,UAAW,SACzC,kBAAC,IAAD,CAAQwF,WAAYlD,GAAmBA,EAAgBzD,OAAS,KAAO8B,KAAUyB,GAAWjC,QAAS2E,GAAcxF,KAAK,QAAQmC,KAAK,WAAWrB,EAAM,SAAW,cAKzK,kBAAC,IAAD,CAAKlB,KAAK,S,iBC/JHuG,MAhBf,YAAgC,IAATC,EAAQ,EAARA,KACrB,OACE,kBAAC,IAAD,CAAMnF,UAAQ,EAACpB,MAAO,CAAEqB,MAAO,OAAQR,UAAW,KAChD,kBAAC,IAAD,CAAQ2F,MAAM,SAASrG,KAAM,GAAIsG,IAAKF,EAAKG,QAC3C,wBAAI1G,MAAO,CAAEuB,QAAS,iBACnBgF,EAAKI,KADR,QAEY,kBAAC,IAAD,CAAKjF,MAAM,WAAX,YAA8B,gCAAS6E,EAAKlI,OAAOmD,QAC7D,kBAAC,IAAD,CAAKE,MAAM,UAAX,aAA8B,gCAAS6E,EAAKd,QAAQjE,OAApD,KACA,kBAAC,IAAD,CAAKE,MAAM,SAAX,cAA8B,gCAAS6E,EAAKK,KAAKpF,OAAjD,KACA,kBAAC,IAAD,CAAKE,MAAM,QAAX,YAA2B,gCAAS6E,EAAKM,OAAOrF,OAAhD,KACA,kBAAC,IAAD,CAAKE,MAAM,UAAX,aAA8B,gCAAS6E,EAAKO,mBAAmBtF,WCR/DW,EAAUC,IAAVD,MAEF4E,GAAU,uCAAG,4BAAAxI,EAAA,sEACCM,MAAM,GAAD,OAAIH,6CAAJ,WADN,cACXsI,EADW,yBAEVA,EAAIjI,QAFM,2CAAH,qDA4CDkI,GAxCD,WAAO,IACLC,EAAa1H,YAAS,WAAYuH,IAAxCnH,KACFR,EAAUC,cAChB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,KAAK,IAAIC,MAAO,CAAEC,QAAS,GAAIC,WAAY,YAC9C,kBAAC,EAAD,CAAOoC,KAAK,UAAUC,MAAO,EAAGC,QAAM,GAAtC,SACA,6BACA,kBAAC,IAAD,CAAQrC,KAAK,QAAQmC,KAAK,UAAUtB,QAAS,kBAAM5B,EAAQ8B,KAAK,mBAC9D,kBAACuB,EAAA,EAAD,MADF,gBAGA,yBAAKzC,MAAO,CAAEa,UAAW,KAErBqG,EACIA,EAASpG,KACT,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAKI,IAAKJ,EAAKE,KACrB,kBAAC,IAAD,CAAKlB,KAAK,KACR,yBAAKC,MAAO,IACV,kBAAC,IAAD,CAAMmH,GAAE,wBAAmBpG,EAAKE,MAC9B,kBAAC,EAAD,CAAasF,KAAMxF,WAM3B,oCACA,kBAAC,IAAD,CAAUL,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,WCvCrD+B,GAAWC,IAAXD,OACAD,GAASN,IAATM,KACF2E,GAAY,uCAAG,4BAAA9I,EAAA,sEACDM,MAAM,GAAD,OAAIH,6CAAJ,aADJ,cACbsI,EADa,yBAEZA,EAAIjI,QAFQ,2CAAH,qDAuBHuI,GAnBQ,SAAC,GAA2B,IAAzBjJ,EAAwB,EAAxBA,OAAQkJ,EAAgB,EAAhBA,UACnB3F,EAAWpC,YAAS,UAAW6H,IAArCzH,KACP,OACE,oCACE,kBAAC,GAAD,CAAM0C,KAAK,UAAUE,QAAM,GAA3B,UACA,6BACA,kBAAC,IAAD,CAAQlC,MAAOjC,EAAQ8B,KAAK,QAAQH,MAAO,CAAEqB,MAAO,QAAUd,SAAUgH,EAAWzE,SAAUlB,GAC3F,kBAAC,GAAD,CAAQtB,MAAO,MAAf,iBAEEsB,GAAWA,EAAQd,KACjB,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAQI,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,KAAMF,EAAKS,WAI5D,+BCpBEmB,GAAWC,IAAXD,OACAD,GAASN,IAATM,KACF8E,GAAc,uCAAG,WAAOpJ,EAAMC,GAAb,eAAAE,EAAA,sEACHM,MAAM,GAAD,OAAIH,6CAAJ,6BAAsDL,IADxD,cACf2I,EADe,yBAEdA,EAAIjI,QAFU,2CAAH,wDAmCL0I,GA/BS,SAAC,GAAqC,IAAnCpJ,EAAkC,EAAlCA,OAAQoH,EAA0B,EAA1BA,QAASiC,EAAiB,EAAjBA,WAAiB,EACzBlI,YAAS,CAAC,YAAanB,GAASmJ,GAAgB,CAAC/H,QAASpB,IAA/EwD,EAD8C,EACpDjC,KAAiBC,EADmC,EACnCA,OAaxB,OAZAC,qBAAU,WACJ+B,EACYA,EAAU0D,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQwE,MAEhDiC,EAAW,MAGE,YAAX7H,GACF6H,EAAW,QAGd,CAAC7F,EAAW4D,EAASiC,EAAY7H,IAElC,oCACE,kBAAC,GAAD,CAAMyC,KAAK,UAAUE,QAAM,GAA3B,WACA,6BACA,kBAAC,IAAD,CAAQlC,MAAOmF,EAAStF,KAAK,QAAQH,MAAO,CAAEqB,MAAO,QAAUd,SAAUmH,EAAY5E,SAAUjB,GAC7F,kBAAC,GAAD,CAAQvB,MAAO,MAAf,kBAEEuB,GAAaA,EAAUf,KACrB,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAQI,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,KAAMF,EAAKS,WAI5D,+BChCEmB,GAAWC,IAAXD,OACAD,GAASN,IAATM,KACFiF,GAAY,uCAAG,WAAOvJ,EAAMC,GAAb,eAAAE,EAAA,sEACDM,MAAM,GAAD,OAAIH,6CAAJ,2BAAoDL,IADxD,cACb2I,EADa,yBAEZA,EAAIjI,QAFQ,2CAAH,wDAmCH6I,GA/BQ,SAAC,GAAmC,IAAjCvJ,EAAgC,EAAhCA,OAAQwI,EAAwB,EAAxBA,OAAQgB,EAAgB,EAAhBA,UAAgB,EACxBrI,YAAS,CAAC,UAAWnB,GAASsJ,GAAc,CAAClI,QAASpB,IAAzE4D,EAD2C,EACjDrC,KAAeC,EADkC,EAClCA,OAatB,OAZAC,qBAAU,WACJmC,EACYA,EAAQsD,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQ4F,MAE9CgB,EAAU,MAGG,YAAXhI,GACFgI,EAAU,QAGb,CAAC5F,EAAS4E,EAAQgB,EAAWhI,IAE9B,oCACE,kBAAC,GAAD,CAAMyC,KAAK,UAAUE,QAAM,GAA3B,UACA,6BACA,kBAAC,IAAD,CAAQlC,MAAOuG,EAAQ1G,KAAK,QAAQH,MAAO,CAAEqB,MAAO,QAAUd,SAAUsH,EAAW/E,SAAUb,GAC3F,kBAAC,GAAD,CAAQ3B,MAAO,MAAf,iBAEE2B,GAAWA,EAAQnB,KACjB,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAQI,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,KAAMF,EAAKS,WAI5D,+BChCEmB,GAAWC,IAAXD,OACAD,GAASN,IAATM,KAEFoF,GAAa,uCAAG,WAAO1J,EAAMC,GAAb,eAAAE,EAAA,sEACFM,MAAM,GAAD,OAAIH,6CAAJ,wCAAiEL,IADpE,cACd2I,EADc,yBAEbA,EAAIjI,QAFS,2CAAH,wDAmCJgJ,GA/BoB,SAAC,GAA2D,IAAzD1J,EAAwD,EAAxDA,OAAQyI,EAAgD,EAAhDA,mBAAoBkB,EAA4B,EAA5BA,sBAA4B,EAChDxI,YAAS,CAAC,sBAAuBnB,GAASyJ,GAAe,CAACrI,QAASpB,IAAlG6D,EAD+E,EACrFtC,KAA2BC,EAD0D,EAC1DA,OAalC,OAZAC,qBAAU,WACJoC,EACYA,EAAoBqD,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQ6F,MAE1DkB,EAAsB,MAGT,YAAXnI,GACFmI,EAAsB,QAGzB,CAAC9F,EAAqB4E,EAAoBkB,EAAuBnI,IAElE,oCACE,kBAAC,GAAD,CAAMyC,KAAK,UAAUE,QAAM,GAA3B,uBACA,6BACA,kBAAC,IAAD,CAAQlC,MAAOwG,EAAoB3G,KAAK,QAAQH,MAAO,CAAEqB,MAAO,QAAUd,SAAUyH,EAAuBlF,SAAUZ,GACnH,kBAAC,GAAD,CAAQ5B,MAAO,MAAf,6BAEE4B,GAAuBA,EAAoBpB,KACzC,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAQI,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,KAAMF,EAAKS,WAI5D,+BCjCEmB,GAAWC,IAAXD,OACAD,GAASN,IAATM,KACFuF,GAAc,uCAAG,WAAO7J,EAAMqH,GAAb,eAAAlH,EAAA,sEACHM,MAAM,GAAD,OAAIH,6CAAJ,8BAAuD+G,IADzD,cACfuB,EADe,yBAEdA,EAAIjI,QAFU,2CAAH,wDAoCLmJ,GAhCM,SAAC,GAAgC,IAA9BzC,EAA6B,EAA7BA,QAASmB,EAAoB,EAApBA,KAAMuB,EAAc,EAAdA,QAAc,EACtB3I,YAAS,CAAC,QAASiG,GAAUwC,GAAgB,CAACxI,QAAQgG,IAAvE2C,EADuC,EAC5CxI,KAAYC,EADgC,EAChCA,OAanB,OAZAC,qBAAU,WACJsI,EACYA,EAAM7C,MAAK,SAAAxE,GAAI,OAAIA,EAAKE,MAAQ2F,MAE5CuB,EAAQ,MAGK,YAAXtI,GACFsI,EAAQ,QAGX,CAACC,EAAOD,EAASvB,EAAM/G,IAExB,oCACE,kBAAC,GAAD,CAAMyC,KAAK,UAAUE,QAAM,GAA3B,YACA,6BACA,kBAAC,IAAD,CAAQlC,MAAOsG,EAAMzG,KAAK,QAAQH,MAAO,CAAEqB,MAAO,QAAUd,SAAU4H,EAASrF,SAAUsF,GACvF,kBAAC,GAAD,CAAQ9H,MAAO,MAAf,eAEE8H,GAASA,EAAMtH,KACb,SAAAC,GAAI,OAAI,kBAAC,GAAD,CAAQI,IAAKJ,EAAKE,IAAKX,MAAOS,EAAKE,KAAMF,EAAKS,WAI5D,6BACA,+B,UC1BEkB,GAASN,IAATM,KA0BO2F,GAxBc,SAACC,GAAW,IAErC3B,EAME2B,EANF3B,KAAM4B,EAMJD,EANIC,QACNlK,EAKEiK,EALFjK,OAAQkJ,EAKNe,EALMf,UACR9B,EAIE6C,EAJF7C,QAASiC,EAIPY,EAJOZ,WACTb,EAGEyB,EAHFzB,OAAQgB,EAGNS,EAHMT,UACRf,EAEEwB,EAFFxB,mBAAoBkB,EAElBM,EAFkBN,sBACpBpB,EACE0B,EADF1B,KAAMuB,EACJG,EADIH,QAER,OACE,oCACE,kBAAC,GAAD,CAAM7F,KAAK,UAAUE,QAAM,GAA3B,QACA,6BACA,kBAAC,IAAD,CAAOxC,MAAO,CAAEqB,MAAO,QAAUf,MAAOqG,EAAMpG,SAAU,SAAAC,GAAC,OAAI+H,EAAQ/H,EAAEC,OAAOH,QAAQH,KAAK,QAAQE,YAAY,aAAamI,OAAQ,kBAACC,GAAA,EAAD,QACpI,6BACA,kBAAC,GAAmB,CAAEpK,SAAQkJ,cAC9B,kBAAC,GAAmB,CAAElJ,SAAQwI,SAAQgB,cACtC,kBAAC,GAA+B,CAAExJ,SAAQyI,qBAAoBkB,0BAC9D,kBAAC,GAAoB,CAAE3J,SAAQoH,UAASiC,eACxC,kBAAC,GAAiB,CAAEjC,UAASmB,OAAMuB,cC1BnCO,GAAe,uCAAG,WAAOnC,GAAP,eAAAhI,EAAA,sEACCM,MAAM,GAAD,OAAIH,6CAAJ,UAA2C,CACrEiK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAUvC,KAND,cAChBzH,EADgB,yBAQfA,EAASC,QARM,2CAAH,sDAUfgK,GAAkB,uCAAG,iCAAAxK,EAAA,6DAAS0C,EAAT,EAASA,IAAKsF,EAAd,EAAcA,KAAd,SACF1H,MAAM,GAAD,OAAIH,6CAAJ,kBAA2CuC,GAAO,CAC5E0H,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAUvC,KANE,cACnBzH,EADmB,yBAQlBA,GARkB,2CAAH,sDAUlBkK,GAAS,uCAAG,WAAO5K,EAAM6C,GAAb,eAAA1C,EAAA,sEACOM,MAAM,GAAD,OAAIH,6CAAJ,kBAA2CuC,IADvD,cACVnC,EADU,yBAETA,EAASC,QAFA,2CAAH,wDAoGAkK,GAhGU,WAAO,IACtBhI,EAAQuD,cAARvD,IACMsF,EAAS/G,YAAS,CAAC,UAAWyB,GAAM+H,GAAW,CAAEvJ,QAASwB,IAAhErB,KAFqB,EAGXsJ,YAAYR,GAAiB,CAC7CS,UAAU,WAAD,4BAAE,sBAAA5K,EAAA,6DACT2G,IAAQY,QAAQ,4BAA6B,GADpC,SAEHsD,IAAWC,kBAAkB,YAF1B,OAGT1E,GAAc,GACdvF,EAAQ8B,KAAK,UAJJ,2CAAF,kDAAC,KADLoI,EAHsB,sBAWRJ,YAAYH,GAAoB,CACnDI,UAAU,WAAD,4BAAE,sBAAA5K,EAAA,6DACT2G,IAAQY,QAAQ,4BAA6B,GADpC,SAEHsD,IAAWC,kBAAkB,YAF1B,OAGT1E,GAAc,GACdvF,EAAQ8B,KAAK,UAJJ,2CAAF,kDAAC,KADLqI,EAXsB,oBAmBvBnK,EAAUC,cAnBa,EAoBCC,oBAAS,GApBV,mBAoBtBwD,EApBsB,KAoBb2B,EApBa,OAqBOnF,oBAAS,GArBhB,mBAqBtBoF,EArBsB,KAqBVC,EArBU,OAsBLrF,mBAAS,MAtBJ,mBAsBtBqH,EAtBsB,KAsBhB4B,EAtBgB,OAuBDjJ,mBAAS,MAvBR,mBAuBtBjB,EAvBsB,KAuBdkJ,EAvBc,OAwBCjI,mBAAS,MAxBV,mBAwBtBmG,EAxBsB,KAwBbiC,EAxBa,OAyBLpI,mBAAS,MAzBJ,mBAyBtBsH,EAzBsB,KAyBhBuB,EAzBgB,OA0BD7I,mBAAS,MA1BR,mBA0BtBuH,EA1BsB,KA0BdgB,EA1Bc,OA2BuBvI,mBAAS,MA3BhC,mBA2BtBwH,EA3BsB,KA2BFkB,GA3BE,KA6B7BlI,qBAAU,WACJyG,IACFgC,EAAQhC,EAAKI,MACbY,EAAUhB,EAAKlI,OAAO4C,KACtB4G,EAAUtB,EAAKM,OAAO5F,KACtB+G,GAAsBzB,EAAKO,mBAAmB7F,KAC9CyG,EAAWnB,EAAKd,QAAQxE,KACxBkH,EAAQ5B,EAAKK,KAAK3F,KAClBwD,GAAW,MAEZ,CAAC8B,IACJ,IAAMZ,GAAY,uCAAG,sBAAApH,EAAA,yDACnBoG,GAAc,GADK,UAGb1D,EAHa,gCAITsI,EAAW,CAAEtI,MAAKsF,KAAM,CAAEI,OAAMtI,SAAQoH,UAASmB,KAAMA,EAAMC,SAAQC,wBAJ5D,6CAMTwC,EAAQ,CAAE3C,OAAMtI,SAAQoH,UAASmB,KAAMA,EAAMC,SAAQC,uBAN5C,yDASjB5B,IAAQC,MAAM,KAAED,QAAS,GACzBP,GAAc,GAVG,0DAAH,qDAalB,OACE,oCACE,kBAAC,IAAD,CACEqB,UAAU,mBACVC,OAAQ,kBAAM7G,EAAQ8B,KAAK,WAC3BM,MAAM,UAER,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKgI,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CAAMpI,UAAQ,GACZ,4BAAKH,EAAM,cAAgB,eACzB6B,EAqBE,kBAAC,IAAD,CAAUpC,QAAM,EAACC,UAAW,CAAEC,KAAM,MApBpC,oCACA,kBAAC,IAAD,CAAMT,KAAK,QAAQgG,SAAUzB,GAC3B,kBAAC,GACI,CACDiC,OAAM4B,UACNlK,SAAQkJ,YACR9B,UAASiC,aACTb,SAAQgB,YACRf,qBAAoBkB,yBACpBpB,OAAMuB,YAGV,kBAAC,IAAD,CAAOnI,MAAO,CAAEoG,MAAO,SACrB,kBAAC,IAAD,CAAQpF,QAAS,WAAQ5B,EAAQ8B,KAAK,WAAaf,KAAK,SAAxD,WAEF,kBAAC,IAAD,CAAOH,MAAO,CAAEoG,MAAO,UACrB,kBAAC,IAAD,CAAQC,UAAWM,IAAStI,IAAWoH,IAAYoB,IAAWC,IAAuBF,EAAM5F,QAAS2E,GAAcxF,KAAK,QAAQmC,KAAK,WAAWrB,EAAM,SAAW,eAQ5K,kBAAC,IAAD,CAAKuI,KAAM,O,wCChHXrH,GAAUC,IAAVD,MACFsH,GAAa,uCAAG,4BAAAlL,EAAA,sEACGM,MAAM,GAAD,OAAIH,6CAAJ,cADR,cACdI,EADc,yBAEbA,EAASC,QAFI,2CAAH,qDAIb2K,GAAkB,uCAAG,WAAOC,GAAP,eAAApL,EAAA,sEACFM,MAAM,GAAD,OAAIH,6CAAJ,aAA8C,CACxEiK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAUa,KANE,cACnB7K,EADmB,yBAQlBA,EAASC,QARS,2CAAH,sDAUlB6K,GAAqB,uCAAG,iCAAArL,EAAA,6DAAQ0C,EAAR,EAAQA,IAAKO,EAAb,EAAaA,MAAb,SACL3C,MAAM,GAAD,OAAIH,6CAAJ,qBAA8CuC,GAAO,CAC/E0H,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAU,CAACtH,YANI,cACtB1C,EADsB,yBAQrBA,EAASC,QARY,2CAAH,sDA0IZ8K,GAhIE,WACf,IAAMzK,EAAUC,cACHyK,EAAYtK,YAAS,WAAYiK,IAAvC7J,KAFc,EAGAsJ,YAAYQ,GAAoB,CACnDP,UAAU,WAAD,4BAAE,sBAAA5K,EAAA,6DACT2G,IAAQY,QAAQ,+BAAgC,GADvC,SAEHsD,IAAWC,kBAAkB,YAF1B,2CAAF,kDAAC,KADLU,EAHc,sBASGb,YAAYU,GAAuB,CACzDT,UAAU,WAAD,4BAAE,sBAAA5K,EAAA,6DACT2G,IAAQY,QAAQ,+BAAgC,GADvC,SAEHsD,IAAWC,kBAAkB,YAF1B,2CAAF,kDAAC,KADLW,EATc,sBAeyB1K,oBAAS,GAflC,mBAed2K,EAfc,KAeGC,EAfH,OAgByB5K,oBAAS,GAhBlC,mBAgBd6K,EAhBc,KAgBGC,EAhBH,OAiBmB9K,qBAjBnB,mBAiBd+K,EAjBc,KAiBAC,EAjBA,OAkBuBhL,qBAlBvB,mBAkBdiL,EAlBc,KAkBEC,EAlBF,OAmBelL,oBAAS,GAnBxB,mBAmBdoF,EAnBc,KAmBFC,EAnBE,KAoBf8F,EAAY,uCAAG,sBAAAlM,EAAA,0DACf8L,EADe,wBAEjB1F,GAAc,GAFG,kBAIToF,EAAW,CAAEvI,MAAO6I,IAJX,OAKfH,GAAmB,GACnBvF,GAAc,GACd2F,EAAgB,MAPD,kDASfpF,IAAQC,MAAM,KAAED,QAAS,GACzBP,GAAc,GAVC,0DAAH,qDAcZ+F,EAAY,uCAAG,sBAAAnM,EAAA,0DACfgM,IAAkBA,EAAe/I,MADlB,wBAEjBmD,GAAc,GAFG,kBAITqF,EAAcO,GAJL,OAKfH,GAAmB,GACnBzF,GAAc,GACd6F,EAAkB,MAPH,kDASftF,IAAQC,MAAM,KAAED,QAAS,GACzBP,GAAc,GAVC,0DAAH,qDAclB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK5E,KAAK,IAAIC,MAAO,CAAEC,QAAS,GAAIC,WAAY,YAC9C,kBAAC,GAAD,CAAOoC,KAAK,UAAUC,MAAO,EAAGC,QAAM,GAAtC,YACA,6BACA,kBAAC,IAAD,CAAQrC,KAAK,QAAQmC,KAAK,UAAUtB,QAAS,kBAAMkJ,GAAmB,KACpE,kBAACzH,EAAA,EAAD,MADF,mBAGA,kBAAC,IAAD,CAAKzC,MAAO,CAAEa,UAAW,KAErBiJ,EACIA,EAAShJ,KACT,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAKyI,KAAM,EAAGrI,IAAKJ,EAAKE,KAC9B,kBAAC,IAAD,CACEjB,MAAO,CAAEqB,MAAO,IAAKR,UAAW,IAChC8J,QAAS,CACP,oCAAE,kBAACC,GAAA,EAAD,CAAiBzJ,IAAI,QAAQH,QAAS,kBAAM5B,EAAQ8B,KAAR,oBAA0BH,EAAKE,SAA7E,UACA,oCAAE,kBAAC4J,GAAA,EAAD,CAAc1J,IAAI,OAAOH,QAAS,WAAQwJ,EAAkBzJ,GAAOqJ,GAAmB,MAAxF,UAGF,kBAAC,IAAD,CAAQ5D,MAAM,SAASrG,KAAM,IAAKsG,IAAK1F,EAAK2F,QAC5C,wBAAI1G,MAAO,CAAEuB,QAAS,iBACnBR,EAAKS,MACN,6BAEET,EAAKpB,OAASoB,EAAKpB,MAAMD,OAAS,EAC9B,kBAAC,IAAD,CAAKgC,MAAM,SAAQ,kDACnB,kBAAC,IAAD,CAAKA,MAAM,OAAM,mDAM7B,oCACA,kBAAC,IAAD,CAAUhB,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,KAC3C,kBAAC,IAAD,CAAUF,QAAM,EAAC0G,QAAM,EAACzG,UAAW,CAAEC,KAAM,SAMvD,kBAAC,KAAD,CACEY,MAAM,iBACNsJ,QAASb,EACTc,OAAO,SACPC,KAAMP,EACNQ,SAAU,kBAAMf,GAAmB,KAEnC,kBAAC,IAAD,CAAM/J,KAAK,QAAQgG,SAAUzB,GAC3B,kBAAC,IAAD,CAAOrE,YAAY,gBACjBC,MAAO+J,EACP9J,SAAU,SAAAC,GAAC,OAAI8J,EAAgB9J,EAAEC,OAAOH,YAI9C,kBAAC,KAAD,CACEkB,MAAM,iBACNsJ,QAASX,EACTa,KAAMN,EACNK,OAAO,SACPE,SAAU,kBAAMb,GAAmB,KAEnC,kBAAC,IAAD,CAAMjK,KAAK,QAAQgG,SAAUzB,GAEzB6F,EACI,kBAAC,IAAD,CAAOlK,YAAY,gBACnBC,MAAOiK,EAAe/I,MACtBjB,SAAU,SAAAC,GAAOgK,EAAkB,2BAAKD,GAAN,IAAsB/I,MAAOhB,EAAEC,OAAOH,YAExE,O,kDChJR6B,GAAgBC,IAAhBD,MAAOO,GAASN,IAATM,KACTwI,GAAY,uCAAG,WAAO9M,EAAM6C,GAAb,eAAA1C,EAAA,sEACIM,MAAM,GAAD,OAAIH,6CAAJ,qBAA8CuC,IADvD,cACbnC,EADa,yBAEZA,EAASC,QAFG,2CAAH,wDAIZ6K,GAAqB,uCAAG,iCAAArL,EAAA,6DAAS0C,EAAT,EAASA,IAAKrB,EAAd,EAAcA,KAAd,SACLf,MAAM,GAAD,OAAIH,6CAAJ,qBAA8CuC,GAAO,CAC/E0H,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBhD,KAAMiD,KAAKC,UAAUlJ,KANK,cACtBd,EADsB,yBAQrBA,GARqB,2CAAH,sDAuIZqM,GA7He,WAC5B,IAAM/L,EAAUC,cACR4B,EAAQuD,cAARvD,IAF0B,EAGAzB,YAAS,CAAC,aAAcyB,GAAMiK,GAAc,CAACzL,QAAQwB,IAAzE0I,EAHoB,EAG1B/J,KAAeC,EAHW,EAGXA,OAHW,EAIVqJ,YAAYU,GAAuB,CACzDT,UAAU,WAAD,4BAAE,sBAAA5K,EAAA,6DACT2G,IAAQY,QAAQ,+BAAgC,GADvC,SAEHsD,IAAWC,kBAAkB,CAAC,aAAcpI,IAFzC,OAGTmK,GAAiB,GAHR,2CAAF,kDAAC,KADLpB,EAJ2B,sBAWQ1K,oBAAS,GAXjB,mBAW3B+L,EAX2B,KAWZD,EAXY,OAYN9L,qBAZM,mBAY3BJ,EAZ2B,KAYnBoM,EAZmB,OAaNhM,mBAAS,4BAbH,mBAa3BjB,EAb2B,KAanBkJ,EAbmB,OAcVjI,oBAAS,GAdC,mBAc3BL,EAd2B,KAcrBsM,EAdqB,KAe5BC,EAAY,uCAAG,WAAOC,GAAP,eAAAlN,EAAA,uDAGiB,KAD9BmN,EAAU/B,EAAQhK,MAAMmB,KAAI,qBAAGG,QACzBqE,QAAQmG,IAClBL,GAAiB,GACjBM,EAAQxK,KAAKuK,GACbzB,EAAc,CAAC/I,MAAKrB,KAAM,CAACD,MAAO+L,MAElCxG,IAAQyG,KAAK,uEAAwE,GARpE,2CAAH,sDAWZC,EAAY,uCAAG,WAAOC,GAAP,eAAAtN,EAAA,sDACnB6M,GAAiB,GAEjBM,GADIA,EAAU/B,EAAQhK,MAAMmB,KAAI,qBAAGG,QACjBoE,QAAO,SAAApE,GAAG,OAAIA,IAAQ4K,KACxC7B,EAAc,CAAC/I,MAAKrB,KAAM,CAACD,MAAO+L,KAJf,2CAAH,sDAMZI,EAAmB,uCAAG,WAAOC,GAAP,SAAAxN,EAAA,sDAC1B6M,GAAiB,GACjBpB,EAAc,CAAC/I,MAAKrB,KAAM,CAAEmM,mBAFF,2CAAH,sDAIzB,OACE,oCACE,kBAAC,IAAD,CACE/F,UAAU,mBACVC,OAAQ,kBAAM7G,EAAQ8B,KAAK,cAC3BM,MAAM,OACN0E,SAAS,uCACT8F,MAEI,yBAAKhM,MAAO,CAACqB,MAAO,MAApB,wBACuB,kBAAC,GAAmB,CAAEhD,SAAQkJ,iBAO3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKiC,KAAM,IACT,kBAAC,IAAD,CAAMhI,MAAM,kBAAkBJ,UAAQ,EAACpB,MAAO,CAAEqB,MAAO,OAAQ4K,UAAW,SACxE,kBAAC,IAAD,CAAM9L,KAAK,QAAQgG,SAAqB,YAAXtG,GAEzB8J,EACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKH,KAAK,KACR,kBAAC,IAAD,CAAQhD,MAAM,SAASrG,KAAM,GAAIsG,IAAKkD,EAAQjD,SAEhD,kBAAC,IAAD,CAAK8C,KAAK,MACR,kBAAC,GAAD,CAAOjH,MAAO,EAAGvC,MAAO,CAAEa,UAAW,KAAO8I,EAAQnI,SAGxD,kBAAC,KAAD,CAAS0K,YAAY,QAArB,SAEEb,EACI,kBAAC,IAAD,CAAU3K,QAAM,EAACC,UAAW,CAAEC,KAAM,MACpC+I,EAAQhK,OAASgK,EAAQhK,MAAMD,OAAS,EACtC,oCACA,kBAAC,GAAD,CAAM4C,KAAK,UAAUE,QAAM,GAA3B,cACA,6BACA,kBAAC,IAAM0B,MAAP,CACEC,QAAS,CAAC,CAAEF,MAAO,YAAa3D,MAAO,OAAS,CAAE2D,MAAO,YAAa3D,MAAO,QAC7EC,SAAU,SAAAC,GAAC,OAAIsL,EAAoBtL,EAAEC,OAAOH,QAC5CA,MAAOqJ,EAAQoC,cACf3H,WAAW,SACXC,YAAY,UAEd,6BACA,kBAAC,KAAD,CACElE,KAAK,QACLiB,UAAQ,EACR+K,WAAYxC,EAAQhK,MACpByM,WACE,SAAArL,GAAI,OAAI,kBAAC,KAAKsL,KAAN,KACN,kBAAC,GAAD,KAAOtL,EAAKS,OACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQR,QAAS,kBAAM4K,EAAa7K,EAAKE,MAAMO,MAAM,cAAcc,KAAK,SAASkE,MAAM,SAAS8F,KAAM,kBAACC,GAAA,EAAD,QACtG,kBAAC,IAAD,CAAQvL,QAAS,kBAAMsK,EAAUvK,EAAKS,QAAQc,KAAK,UAAUgK,KAAM,kBAACE,GAAA,EAAD,OAAnE,sBAMR,kBAAC,IAAD,CACA3M,OAAO,MACP2B,MAAM,mBACN0E,SAAS,6CACT8F,MAAO,kBAAC,GAAD,CAAOzJ,MAAO,GAAd,iDAIf,MAKZ,kBAAC,IAAD,CAAKiH,KAAM,IACT,kBAAC,IAAD,CAAMhI,MAAM,uBAAuBJ,UAAQ,EAACpB,MAAO,CAAEqB,MAAO,OAAQ4K,UAAW,SAC7E,kBAAC,KAAD,CAAQQ,gBAAgB,cAAcC,kBAAkB,WAAWnM,SAAU,kBAAMgL,GAAStM,IAASqM,EAAU,SAC/G,yBAAKtL,MAAO,CAAE2M,OAAQ,OAAQC,UAAW,SACvC,kBAAC,EAAD,CAAU1N,OAAQA,EAAQb,OAAQA,EAAQY,KAAMA,EAAME,YAAaqM,UCrI3EN,GAAY,uCAAG,WAAO9M,EAAMyO,GAAb,eAAAtO,EAAA,sEACDM,MAAM,GAAD,OAAIH,6CAAJ,+BAAwDmO,IAD5D,cACb7F,EADa,yBAEZA,EAAIjI,QAFQ,2CAAH,wDAmCH+N,OA/Bf,YAAmC,IAAXD,EAAU,EAAVA,OAAU,EACGrN,YAAS,CAAC,eAAgBqN,GAAS3B,IAAxDpB,EADkB,EACxBlK,KAAgBC,EADQ,EACRA,OACxB,OACE,kBAAC,IAAD,CAAMM,KAAK,QAAQgG,SAAqB,YAAXtG,GAC3B,kBAAC,IAAD,CAAKkN,OAAQ,GAETjD,EAAWA,EAAShJ,KAAI,SAAC6I,GACvB,OAAO,kBAAC,IAAD,CAAKH,KAAK,IAAIrI,IAAKwI,EAAQ1I,KAChC,kBAAC,IAAD,CAAMG,UAAQ,EAACpB,MAAO,CAAE2M,OAAQ,OAAQtL,MAAO,OAAQR,UAAW,KAChE,kBAAC,IAAD,CAAQ2F,MAAM,SAASrG,KAAM,GAAIsG,IAAKkD,EAAQjD,QAC9C,wBAAI1G,MAAO,CAAEuB,QAAS,iBACnBoI,EAAQnI,OAEX,4BAEImI,EAAQhK,MAAMmB,KAAI,SAAAsE,GAAI,OAAI,kBAAC,IAAD,CAAKjE,IAAKiE,EAAKnE,IAAKS,MAAM,SAClD,kBAAC,IAAD,CAAMyF,GAAE,wBAAmB/B,EAAKnE,MAC9B,yCAAemE,EAAK5D,kBAO7B,MC5BPmB,GAAWC,IAAXD,OACFoE,GAAU,uCAAG,4BAAAxI,EAAA,sEACCM,MAAM,GAAD,OAAIH,6CAAJ,WADN,cACXsI,EADW,yBAEVA,EAAIjI,QAFM,2CAAH,qDAiDDiO,GA7Ca,WAAO,IACpB9F,EAAa1H,YAAS,WAAYuH,IAAvCnH,KADwB,EAEMN,qBAFN,mBAEzB2N,EAFyB,KAEZC,EAFY,KAMhC,OACE,oCACE,yBAAKlN,MAAO,CAAEmN,UAAW,WACvB,kBAAC,IAAD,CACErK,SAAUoE,EACV5G,MAAO2M,GAAeA,EAAYhM,IAClCd,KAAK,QACLiN,YAAU,EACVpN,MAAO,CAAEqB,MAAO,KAChBhB,YAAY,gBACZ0D,iBAAiB,WACjBD,aAAc,SAACuJ,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAclI,QAAQ+H,EAAMG,gBAAkB,GAEhEjN,SAjBa,SAACD,GACpB4M,EAAehG,EAAS3B,MAAK,qBAAEtE,MAAiBX,QAmBxC4G,GAAYA,EAASpG,KAAI,SAAAyF,GAAI,OAAI,kBAAC,GAAD,CAAQpF,IAAKoF,EAAKtF,IAAKX,MAAOiG,EAAKtF,KAAMsF,EAAKI,WAIrF,6BAGIsG,EACI,oCACA,kBAAC,EAAD,CAAa1G,KAAM0G,IACnB,kBAAC,GAAD,CAAcJ,OAAQI,EAAYhM,OAElC,kBAAC,IAAD,CACAO,MAAM,oDCnCZiM,GAA4BC,IAA5BD,OAAQE,GAAoBD,IAApBC,QAASC,GAAWF,IAAXE,OAmIVC,OAjIf,WAAgB,IAAD,EACmBvO,mBAASwO,aAAaC,QAAQ,kBADjD,mBACNC,EADM,KACIC,EADJ,KAEbnO,qBAAU,WACHkO,GACHE,IAAaC,QAAQ,CACnBjJ,QAAS,wBAAIlF,MAAO,CAAE0B,MAAO,YAApB,0BACT0M,SAAU,KACVC,YACE,4BACE,oDAAyB,+CACzB,kIAAuG,qEACvG,+DAAoC,gDAApC,0CACA,kCAAO,uDAAP,yDAGJrO,MAAO,CACLqB,MAAO,QAETL,QAAS,WACPiN,GAAY,GACZH,aAAaQ,QAAQ,iBAAiB,IAExCC,QAAS,WACPN,GAAY,GACZH,aAAaQ,QAAQ,iBAAiB,QAI3C,CAACN,IACJ,IAAMQ,EAAWC,cACjB,OACE,kBAAC,IAAD,CAAQzI,UAAU,UAChB,kBAACyH,GAAD,KACE,kBAAC,IAAD,CAAMtG,GAAG,KACP,yBAAKnB,UAAU,QAAf,qBAEF,kBAAC,IAAD,CAAM0I,MAAM,OAAO7K,KAAK,aAAa8K,aAAc,CAACH,EAASI,WAC3D,kBAAC,IAAKvC,KAAN,CAAWlL,IAAI,UACb,kBAAC,IAAD,CAASgG,GAAG,UACV,kBAAC0H,EAAA,EAAD,MACA,2CAGJ,kBAAC,IAAKxC,KAAN,CAAWlL,IAAI,UACb,kBAAC,IAAD,CAASgG,GAAG,UACV,kBAAC2H,EAAA,EAAD,MACA,2CAGJ,kBAAC,IAAKzC,KAAN,CAAWlL,IAAI,aACb,kBAAC,IAAD,CAASgG,GAAG,aACV,kBAAC4H,EAAA,EAAD,MACA,8CAGJ,kBAAC,IAAK1C,KAAN,CAAWlL,IAAI,aACb,kBAAC,IAAD,CAASgG,GAAG,aACV,kBAAC6H,EAAA,EAAD,MACA,2DAGJ,kBAAC,IAAK3C,KAAN,CAAWrM,MAAO,CAAEoG,MAAO,UACzB,uBAAG3F,OAAO,QAAQwO,KAAK,+DACvB,kBAACC,EAAA,EAAD,MADA,IACmB,4BAAQlP,MAAO,CAAC0B,MAAO,WAAvB,QAGrB,kBAAC,IAAK2K,KAAN,CAAWrM,MAAO,CAAEoG,MAAO,UACzB,uBAAG3F,OAAO,QAAQwO,KAAK,+DACvB,kBAACC,EAAA,EAAD,MADA,IACmB,4BAAQlP,MAAO,CAAC0B,MAAO,WAAvB,SAGrB,kBAAC,IAAK2K,KAAN,CAAWrM,MAAO,CAAEoG,MAAO,UACzB,uBAAG3F,OAAO,QAAQwO,KAAK,sCAAvB,sBACqB,4BAAQjP,MAAO,CAAC0B,MAAO,WAAvB,yBAK3B,kBAACiM,GAAD,KACE,yBAAK3N,MAAO,CAAEmP,gBAAiB,QAASlD,UAAW,UAE/C+B,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoB,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAUjI,GAAG,aAIf,kBAAC,IAAD,CACAnH,MAAO,CAAEqP,WAAY,KACrBxP,OAAO,MACP2B,MAAM,gCACN0E,SAAS,iDAKnB,kBAAC0H,GAAD,CAAQ5N,MAAO,CAAEmN,UAAW,WAA5B,wCAA0E,uBAAG1M,OAAO,QAAQwO,KAAK,sCAAvB,wB,0BClIhFK,IAASC,OAEP,kBAAC,IAAD,CAAeC,SAAU9Q,4BACrB,kBAAC,sBAAD,CAAoB+Q,eAAe,IACnC,kBAAC,GAAD,OAGJC,SAASC,eAAe,W","file":"static/js/main.0253980c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Skeleton, Card, Tag, Input } from 'antd';\nimport { RightCircleOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nimport { useQuery } from 'react-query';\nconst fetchRules = async (_key, region, keyword) => {\n  const url = new URL(`${process.env.REACT_APP_API_URL}/rules`)\n  if (region) {\n    url.searchParams.append('regions', region)\n  }\n  if (keyword) {\n    url.searchParams.append('keyword', keyword)\n  }\n  const response = await fetch(url)\n  return response.json()\n}\nconst RuleList = ({ region, lazy = false, search, clickAction = null }) => {\n  const history = useHistory();\n  const [keyword, setKeyword] = useState();\n  const {data:rules, status} = useQuery(['fetchRules', region, keyword], fetchRules, {enabled: (!lazy || (lazy && keyword && keyword.length > 2))})\n  useEffect(() => {\n    if (search) {\n      setKeyword(search)\n    }\n  }, [search])\n  const handleClick = (_id) => {\n    if (clickAction) {\n      clickAction(_id)\n    } else {\n      history.push('/rules/update/' + _id)\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          {\n            lazy\n              ? <Input size=\"large\" allowClear placeholder=\"Type something...\" value={keyword} onChange={e => setKeyword(e.target.value)} />\n              : ''\n          }\n          {\n            status === 'loading' ?\n              <>\n                <Skeleton active paragraph={{ rows: 2 }} />\n                <Skeleton active paragraph={{ rows: 2 }} />\n                <Skeleton active paragraph={{ rows: 2 }} />\n                <Skeleton active paragraph={{ rows: 2 }} />\n              </>\n              : ''\n          }\n          <div style={{ marginTop: 20 }}>\n            {\n              rules && status !== 'loading'\n                ? rules.map(\n                  item => <Card onClick={() => handleClick(item._id)} key={item._id} bordered style={{ width: '100%', marginTop: 20 }}\n                    hoverable>\n                    <Row>\n                      <Col flex=\"1\">\n                        <h2 style={{ display: 'inline-block' }}>\n                          {item.title}\n                        </h2>\n                      </Col>\n                      <Col flex=\"4\">\n                        <Tag style={{ fontSize: 20 }} color=\"gold\">Match Type : <strong>{item.conditionMatchType}</strong></Tag>\n                        <Tag style={{ fontSize: 20 }} color=\"magenta\">REGIONS : <strong>{item.regions.map(region => ' ' + region.title)}</strong></Tag>\n                        {\n                          item.countries\n                          && item.countries.length\n                          ? <Tag style={{ fontSize: 20 }} color='orange'>\n                            Countries  <RightCircleOutlined />\n                            <strong>\n                              {item.countries.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                            </strong>\n                          </Tag> : ''\n                        }\n                        {\n                          item.languages\n                          && item.languages.length\n                          ? <Tag style={{ fontSize: 20 }} color='green'>\n                            Languages  <RightCircleOutlined />\n                            <strong>\n                              {item.languages.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                            </strong>\n                          </Tag> : ''\n                        }\n                        {\n                          item.markets\n                          && item.markets.length\n                          ? <Tag style={{ fontSize: 20 }} color='blue'>\n                            Markets  <RightCircleOutlined />\n                            <strong>\n                              {item.markets.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                            </strong>\n                          </Tag> : ''\n                        }\n                        {\n                          item.issuerSegmentations\n                          && item.issuerSegmentations.length\n                          ? <Tag style={{ fontSize: 20 }} color='purple'>\n                            Issuer Segmentations  <RightCircleOutlined />\n                            <strong>\n                              {item.issuerSegmentations.map((value, index) => `${index > 0 ? ' | ' : '  '}` + value.title)}\n                            </strong>\n                          </Tag> : ''\n                        }\n                      </Col>\n                    </Row>\n\n                  </Card>\n                )\n                : ''\n            }\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default RuleList\n","import React from 'react'\nimport { Row, Col, Typography, Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useHistory } from 'react-router';\nimport RuleList from '../components/RuleList';\nconst { Title } = Typography;\n\nconst Rules = () => {\n  const history = useHistory()\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Rules</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/rules/create')}>\n            <PlusOutlined /> Create Rule\n          </Button>\n          <RuleList></RuleList>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Rules\n","import React from 'react'\nimport { Skeleton, Typography, Input, Select, Radio } from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\n\nconst CreateUpdateRuleForm = ({\n  loading,\n  data,\n  filteredData,\n  title, setTitle,\n  matchType, setMatchType,\n  selectedRegions, setSelectedRegions,\n  selectedMarkets, setSelectedMarkets,\n  selectedCountries, setSelectedCountries,\n  selectedLanguages, setSelectedLanguages,\n  selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n}) => {\n\n  return (\n    <>\n      {\n        loading\n          ? <Skeleton active paragraph={{ rows: 12 }} />\n          : ''\n      }\n      {data\n        ? <>\n          <Text type=\"primary\" strong>Title</Text>\n          <Input style={{ width: '100%' }} value={title} onChange={e => setTitle(e.target.value)} size=\"large\" placeholder=\"Enter Title\" />\n          <br />\n          <Text type=\"primary\" strong>Available in Regions</Text>\n          <Select\n            value={selectedRegions}\n            onChange={regions => setSelectedRegions(regions)}\n            mode=\"multiple\"\n            size=\"large\"\n            filterOption\n            optionFilterProp=\"label\"\n            placeholder=\"Select Regions\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              data.regions.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <h3 style={{marginTop: \"10px\"}}>Configure Conditions</h3>\n          <Text type=\"primary\" strong>Match Type</Text>\n          <br />\n          <Radio.Group\n            options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n            onChange={e=> setMatchType(e.target.value)}\n            value={matchType}\n            optionType=\"button\"\n            buttonStyle=\"solid\"\n          />\n          <br />\n          <Text type=\"primary\" strong>Markets</Text>\n          <Select\n            value={selectedMarkets}\n            onChange={(markets) => setSelectedMarkets(markets)}\n            mode=\"multiple\"\n            filterOption\n            optionFilterProp=\"label\"\n            size=\"large\"\n            placeholder=\"Select Markets\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.markets && filteredData.markets.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Issuer Segmentations</Text>\n          <Select\n            value={selectedIssuerSegmentations}\n            onChange={values => setSelectedIssuerSegmentations(values)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Segmentations\"\n            style={{ width: '100%' }}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.issuerSegmentations && filteredData.issuerSegmentations.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Countries</Text>\n          <Select\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Countries\"\n            style={{ width: '100%' }}\n            value={selectedCountries}\n            onChange={countries => setSelectedCountries(countries)}\n            filterOption\n            optionFilterProp=\"label\"\n            optionLabelProp=\"label\"\n          >\n            {\n              filteredData && filteredData.countries && filteredData.countries.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n          <Text type=\"primary\" strong>Languages</Text>\n          <Select\n            value={selectedLanguages}\n            onChange={languages => setSelectedLanguages(languages)}\n            mode=\"multiple\"\n            size=\"large\"\n            placeholder=\"Select Languages\"\n            style={{ width: '100%' }}\n            optionLabelProp=\"label\"\n            filterOption\n            optionFilterProp=\"label\"\n          >\n            {\n              filteredData && filteredData.languages && filteredData.languages.map(item => {\n                return <Option key={item._id} value={item._id} label={item.title}>{item.title}</Option>\n              })\n            }\n          </Select>\n        </>\n        : ''\n      }\n    </>\n  )\n}\n\nexport default CreateUpdateRuleForm\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport { message, Row, Col, Card, Space, Button, Spin, PageHeader } from 'antd';\nimport CreateUpdateRuleForm from '../components/CreateUpdateRuleForm';\nimport { useHistory, useParams } from 'react-router';\n\nconst CreateUpdateRule = () => {\n  const history = useHistory()\n  const { _id } = useParams()\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setData] = useState();\n  const [filteredData, setFilteredData] = useState({});\n  const [selectedRegions, setSelectedRegions] = useState([]);\n  const [selectedMarkets, setSelectedMarkets] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const [selectedLanguages, setSelectedLanguages] = useState([]);\n  const [selectedIssuerSegmentations, setSelectedIssuerSegmentations] = useState([]);\n  const [title, setTitle] = useState();\n  const [matchType, setMatchType] = useState('ALL');\n  const init = async () => {\n    setLoading(true);\n    try {\n      const { data: regions } = await Axios.get(`${process.env.REACT_APP_API_URL}/regions`);\n      const { data: markets } = await Axios.get(`${process.env.REACT_APP_API_URL}/markets`);\n      const { data: issuerSegmentations } = await Axios.get(`${process.env.REACT_APP_API_URL}/issuer-segmentations`);\n      const { data: countries } = await Axios.get(`${process.env.REACT_APP_API_URL}/countries`);\n      const { data: languages } = await Axios.get(`${process.env.REACT_APP_API_URL}/languages`);\n      setData({ regions, markets, issuerSegmentations, countries, languages })\n      if (_id) {\n        initFormData()\n      }\n      setLoading(false)\n    } catch (e) {\n      setLoading(false)\n      message.error(e.message, 3)\n    }\n\n  }\n  const initFormData = async () => {\n    const { data: rule } = await Axios.get(`${process.env.REACT_APP_API_URL}/rules/${_id}`);\n    setTitle(rule.title);\n    setMatchType(rule.conditionMatchType);\n    setSelectedLanguages(rule.languages);\n    setSelectedMarkets(rule.markets);\n    setSelectedIssuerSegmentations(rule.issuerSegmentations)\n    setSelectedCountries(rule.countries);\n    setSelectedRegions(rule.regions);\n  }\n  const onRegionSelect = () => {\n    if (data) {\n      const markets = data.markets.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const issuerSegmentations = data.issuerSegmentations.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      const countries = data.countries.filter(({ region }) => selectedRegions.indexOf(region) !== -1)\n      // clear selected data for dependent fields\n      setSelectedMarkets(selectedMarkets.filter(value => {\n        const target = data.markets.find(item => item._id === value)\n        return selectedRegions.indexOf(target.region) !== -1\n      }))\n      setSelectedIssuerSegmentations(selectedIssuerSegmentations.filter(\n        value => {\n          const target = data.issuerSegmentations.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      setSelectedCountries(selectedCountries.filter(\n        value => {\n          const target = data.countries.find(item => item._id === value)\n          return selectedRegions.indexOf(target.region) !== -1\n        }\n      ))\n      // following data will be used for showing filtered data in select options\n      setFilteredData({ markets, issuerSegmentations, countries })\n    }\n  }\n  const onCountrySelect = () => {\n    if (data) {\n      // clear selected data for dependent fields\n      setSelectedLanguages(selectedLanguages.filter(\n        value => {\n          const target = data.languages.find(item => item._id === value)\n          return selectedCountries.indexOf(target.country) !== -1\n        }\n      ))\n      // filter languages to show in options\n      const languages = data.languages.filter(({ country }) => selectedCountries.indexOf(country) !== -1)\n      setFilteredData({ ...filteredData, languages })\n    }\n  }\n  useEffect(() => {\n    init()\n  }, [])\n\n  useEffect(() => {\n    if (selectedRegions) {\n      onRegionSelect()\n    }\n  }, [selectedRegions])\n\n  useEffect(() => {\n    if (selectedCountries) {\n      onCountrySelect()\n    }\n  }, [selectedCountries])\n\n  const handleSubmit = async () => {\n    setSubmitting(true)\n    if (\n      selectedCountries.length === 0\n      && selectedLanguages.length === 0\n      && selectedMarkets.length === 0\n      && selectedIssuerSegmentations.length === 0\n    ) {\n      message.error('Rules without conditions have no significance!', 3);\n      setSubmitting(false)\n      return\n    }\n    const body = {\n      title,\n      regions: selectedRegions,\n      conditionMatchType: matchType,\n      countries: selectedCountries,\n      markets: selectedMarkets,\n      languages: selectedLanguages,\n      issuerSegmentations: selectedIssuerSegmentations\n    }\n    try {\n      if (_id) {\n        await Axios.put(`${process.env.REACT_APP_API_URL}/rules/${_id}`, body);\n        message.success('Rule Updated Successfully', 3)\n        history.push('/rules')\n      } else {\n        await Axios.post(`${process.env.REACT_APP_API_URL}/rules`, body);\n        message.success('Rule Created Successfully', 3)\n        history.push('/rules')\n      }\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/rules')}\n        title=\"Back to Rules\"\n        subTitle=\"Manage rules associated with content\"\n      />\n\n      <Row>\n        <Col flex=\"1\"></Col>\n        <Col flex=\"1\">\n          <Card bordered>\n            <h2>{_id ? 'Update Rule' : 'Create Rule'}</h2>\n            <Spin size=\"large\" spinning={submitting}>\n              <CreateUpdateRuleForm {...{\n                loading, setLoading,\n                data, setData,\n                filteredData, setFilteredData,\n                selectedRegions, setSelectedRegions,\n                selectedMarkets, setSelectedMarkets,\n                selectedCountries, setSelectedCountries,\n                selectedLanguages, setSelectedLanguages,\n                selectedIssuerSegmentations, setSelectedIssuerSegmentations,\n                title, setTitle,\n                matchType, setMatchType\n              }} />\n              <Space style={{ float: 'left', marginTop: '25px' }}>\n                <Button onClick={() => { history.push('/rules') }} size=\"large\" >Cancel</Button>\n              </Space>\n              <Space style={{ float: 'right', marginTop: '25px' }}>\n                <Button disabled={!(selectedRegions && selectedRegions.length > 0) || !title || !matchType} onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n              </Space>\n            </Spin>\n          </Card>\n        </Col>\n        <Col flex=\"1\"></Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateRule\n","import React from 'react'\nimport Avatar from 'antd/lib/avatar/avatar'\nimport { Card, Tag } from 'antd'\n\nfunction UserDetails({ user }) {\n  return (\n    <Card bordered style={{ width: '100%', marginTop: 20 }}>\n      <Avatar shape=\"circle\" size={40} src={user.image} />\n      <h4 style={{ display: 'inline-block' }}>\n        {user.name} &nbsp;\n                  <Tag color=\"magenta\">REGION : <strong>{user.region.title}</strong></Tag>\n        <Tag color=\"orange\">COUNTRY : <strong>{user.country.title}</strong> </Tag>\n        <Tag color=\"green\">LANGUAGE : <strong>{user.lang.title}</strong> </Tag>\n        <Tag color=\"blue\">MARKET : <strong>{user.market.title}</strong> </Tag>\n        <Tag color=\"purple\">SEGMENT : <strong>{user.issuerSegmentation.title}</strong></Tag>\n      </h4>\n    </Card>\n  )\n}\n\nexport default UserDetails\n","import React from 'react'\nimport { useQuery } from 'react-query'\nimport { Row, Col, Button, Typography, Skeleton } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { Link, useHistory } from 'react-router-dom';\nimport UserDetails from '../components/UserDetails';\nconst { Title } = Typography;\n\nconst fetchUsers = async () => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/users`)\n  return res.json()\n}\nconst Users = () => {\n  const { data: userList } = useQuery('userList', fetchUsers)\n  const history = useHistory();\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Users</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => history.push('/users/create')}>\n            <PlusOutlined /> Create User\n          </Button>\n          <div style={{ marginTop: 20 }}>\n            {\n              userList\n                ? userList.map(\n                  item => <Row key={item._id}>\n                    <Col flex=\"1\">\n                      <div style={{}}>\n                        <Link to={`/users/update/${item._id}`}>\n                          <UserDetails user={item} />\n                        </Link>\n                      </div>\n                    </Col>\n                  </Row>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport { Select, Typography } from 'antd';\nimport { useQuery } from 'react-query';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst fetchRegions = async () => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/regions`)\n  return res.json()\n}\nconst RegionSelector = ({ region, setRegion }) => {\n  const {data: regions} = useQuery('regions', fetchRegions)\n  return (\n    <>\n      <Text type=\"primary\" strong>Region</Text>\n      <br />\n      <Select value={region} size='large' style={{ width: '100%' }} onChange={setRegion} loading={!regions}>\n        <Option value={null}>Select Region</Option>\n        {\n          regions && regions.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default RegionSelector\n","import React, { useEffect } from 'react'\nimport { Select, Typography } from 'antd';\nimport { useQuery } from 'react-query';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst fetchCountries = async (_key, region) => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/countries?region=${region}`)\n  return res.json()\n}\nconst CountrySelector = ({ region, country, setCountry }) => {\n  const {data: countries, status} = useQuery(['countries', region], fetchCountries, {enabled: region})\n  useEffect(() => {\n    if (countries) {\n      const match = countries.find(item => item._id === country)\n      if (!match) {\n        setCountry(null);\n      }\n    } else {\n      if (status !== 'loading') {\n        setCountry(null);\n      }\n    }\n  }, [countries, country, setCountry, status])\n  return (\n    <>\n      <Text type=\"primary\" strong>Country</Text>\n      <br />\n      <Select value={country} size='large' style={{ width: '100%' }} onChange={setCountry} loading={!countries}>\n        <Option value={null}>Select Country</Option>\n        {\n          countries && countries.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default CountrySelector\n","import React, { useEffect } from 'react'\nimport { Select, Typography } from 'antd';\nimport { useQuery } from 'react-query';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst fetchMarkets = async (_key, region) => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/markets?region=${region}`)\n  return res.json()\n}\nconst MarketSelector = ({ region, market, setMarket }) => {\n  const {data: markets, status} = useQuery(['markets', region], fetchMarkets, {enabled: region})\n  useEffect(() => {\n    if (markets) {\n      const match = markets.find(item => item._id === market)\n      if (!match) {\n        setMarket(null);\n      }\n    } else {\n      if (status !== 'loading') {\n        setMarket(null);\n      }\n    }\n  }, [markets, market, setMarket, status])\n  return (\n    <>\n      <Text type=\"primary\" strong>Market</Text>\n      <br />\n      <Select value={market} size='large' style={{ width: '100%' }} onChange={setMarket} loading={!markets}>\n        <Option value={null}>Select Market</Option>\n        {\n          markets && markets.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default MarketSelector\n","import React, { useEffect } from 'react'\nimport { Select, Typography } from 'antd';\nimport { useQuery } from 'react-query';\nconst { Option } = Select;\nconst { Text } = Typography;\n\nconst fetchSegments = async (_key, region) => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/issuer-segmentations?region=${region}`)\n  return res.json()\n}\nconst IssuerSegmentationSelector = ({ region, issuerSegmentation, setIssuerSegmentation }) => {\n  const {data: issuerSegmentations, status} = useQuery(['issuerSegmentations', region], fetchSegments, {enabled: region})\n  useEffect(() => {\n    if (issuerSegmentations) {\n      const match = issuerSegmentations.find(item => item._id === issuerSegmentation)\n      if (!match) {\n        setIssuerSegmentation(null);\n      }\n    } else {\n      if (status !== 'loading') {\n        setIssuerSegmentation(null);\n      }\n    }\n  }, [issuerSegmentations, issuerSegmentation, setIssuerSegmentation, status])\n  return (\n    <>\n      <Text type=\"primary\" strong>Issuer Segmentation</Text>\n      <br />\n      <Select value={issuerSegmentation} size='large' style={{ width: '100%' }} onChange={setIssuerSegmentation} loading={!issuerSegmentations}>\n        <Option value={null}>Select IssuerSegmentation</Option>\n        {\n          issuerSegmentations && issuerSegmentations.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br/>\n    </>\n  )\n}\n\nexport default IssuerSegmentationSelector\n","import React, { useEffect } from 'react'\nimport { Select, Typography } from 'antd';\nimport { useQuery } from 'react-query';\nconst { Option } = Select;\nconst { Text } = Typography;\nconst fetchLanguages = async (_key, country) => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/languages?country=${country}`)\n  return res.json()\n}\nconst LangSelector = ({ country, lang, setLang }) => {\n  const {data:langs, status} = useQuery(['langs', country], fetchLanguages, {enabled:country})\n  useEffect(() => {\n    if (langs) {\n      const match = langs.find(item => item._id === lang)\n      if (!match) {\n        setLang(null);\n      }\n    } else {\n      if (status !== 'loading') {\n        setLang(null);\n      }\n    }\n  }, [langs, setLang, lang, status])\n  return (\n    <>\n      <Text type=\"primary\" strong>Language</Text>\n      <br />\n      <Select value={lang} size='large' style={{ width: '100%' }} onChange={setLang} loading={!langs}>\n        <Option value={null}>Select Lang</Option>\n        {\n          langs && langs.map(\n            item => <Option key={item._id} value={item._id}>{item.title}</Option>\n          )\n        }\n      </Select>\n      <br />\n      <br/>\n    </>\n  )\n}\n\nexport default LangSelector\n","import React from 'react'\n\nimport RegionSelector from './RegionSelector';\nimport CountrySelector from './CountrySelector';\nimport MarketSelector from './MarketSelector';\nimport IssuerSegmentationSelector from './IssuerSegmentationSelector';\nimport LangSelector from './LangSelector';\nimport { Input, Typography } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nconst CreateUpdateUserForm = (props) => {\n  const {\n    name, setName,\n    region, setRegion,\n    country, setCountry,\n    market, setMarket,\n    issuerSegmentation, setIssuerSegmentation,\n    lang, setLang\n  } = props\n  return (\n    <>\n      <Text type=\"primary\" strong>Name</Text>\n      <br />\n      <Input style={{ width: '100%' }} value={name} onChange={e => setName(e.target.value)} size=\"large\" placeholder=\"Enter Name\" prefix={<UserOutlined />} />\n      <br />\n      <RegionSelector {...{ region, setRegion }} />\n      <MarketSelector {...{ region, market, setMarket }} />\n      <IssuerSegmentationSelector {...{ region, issuerSegmentation, setIssuerSegmentation }} />\n      <CountrySelector {...{ region, country, setCountry }} />\n      <LangSelector {...{ country, lang, setLang }} />\n    </>\n  )\n}\n\nexport default CreateUpdateUserForm\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router'\nimport { message, Row, Col, Card, Skeleton, Button, Space, Spin, PageHeader } from 'antd'\nimport CreateUpdateUserForm from '../components/CreateUpdateUserForm'\nimport { useMutation, queryCache, useQuery } from 'react-query'\nconst addUserMutation = async (user) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  return response.json();\n}\nconst updateUserMutation = async ({ _id, user }) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/users/${_id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  return response;\n}\nconst fetchUser = async (_key, _id) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/users/${_id}`);\n  return response.json();\n}\nconst CreateUpdateUser = () => {\n  const { _id } = useParams()\n  const { data: user } = useQuery(['getUser', _id], fetchUser, { enabled: _id })\n  const [addUser] = useMutation(addUserMutation, {\n    onSuccess: async () => {\n      message.success('User Created Successfully', 3)\n      await queryCache.invalidateQueries('userList')\n      setSubmitting(false)\n      history.push('/users')\n    },\n  })\n  const [updateUser] = useMutation(updateUserMutation, {\n    onSuccess: async () => {\n      message.success('User Updated Successfully', 3)\n      await queryCache.invalidateQueries('userList')\n      setSubmitting(false)\n      history.push('/users')\n    },\n  })\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [name, setName] = useState(null);\n  const [region, setRegion] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [lang, setLang] = useState(null);\n  const [market, setMarket] = useState(null);\n  const [issuerSegmentation, setIssuerSegmentation] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name)\n      setRegion(user.region._id)\n      setMarket(user.market._id)\n      setIssuerSegmentation(user.issuerSegmentation._id)\n      setCountry(user.country._id)\n      setLang(user.lang._id)\n      setLoading(false)\n    }\n  }, [user])\n  const handleSubmit = async () => {\n    setSubmitting(true);\n    try {\n      if (_id) {\n        await updateUser({ _id, user: { name, region, country, lang: lang, market, issuerSegmentation } })\n      } else {\n        await addUser({ name, region, country, lang: lang, market, issuerSegmentation })\n      }\n    } catch (e) {\n      message.error(e.message, 3)\n      setSubmitting(false)\n    }\n  }\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/users')}\n        title=\"Users\"\n      />\n      <Row>\n        <Col span={8} />\n        <Col span={8}>\n          <Card bordered>\n            <h2>{_id ? 'Update User' : 'Create User'}</h2>\n            {!loading\n              ? <>\n                <Spin size=\"large\" spinning={submitting}>\n                  <CreateUpdateUserForm {\n                    ...{\n                      name, setName,\n                      region, setRegion,\n                      country, setCountry,\n                      market, setMarket,\n                      issuerSegmentation, setIssuerSegmentation,\n                      lang, setLang\n                    }\n                  } />\n                  <Space style={{ float: 'left' }}>\n                    <Button onClick={() => { history.push('/users') }} size=\"large\" >Cancel</Button>\n                  </Space>\n                  <Space style={{ float: 'right' }}>\n                    <Button disabled={!name || !region || !country || !market || !issuerSegmentation || !lang} onClick={handleSubmit} size=\"large\" type=\"primary\">{_id ? 'Update' : 'Create'}</Button>\n                  </Space>\n                </Spin>\n              </>\n              : <Skeleton active paragraph={{ rows: 10 }} />\n            }\n          </Card>\n        </Col>\n        <Col span={8} />\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUpdateUser\n","import React, { useState } from 'react'\nimport { Row, Col, Card, Button, Typography, message, Skeleton, Tag, Input, Spin } from 'antd'\nimport { PlusOutlined, SettingOutlined, EditOutlined } from '@ant-design/icons'\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'antd/lib/modal/Modal';\nimport { useQuery, useMutation, queryCache } from 'react-query';\nconst { Title } = Typography;\nconst fetchContents = async () => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/contents`)\n  return response.json()\n}\nconst addContentMutation = async (content) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/contents`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(content)\n  });\n  return response.json();\n}\nconst updateContentMutation = async ({_id, title}) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/contents/${_id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({title})\n  });\n  return response.json();\n}\nconst Contents = () => {\n  const history = useHistory();\n  const {data: contents} = useQuery('contents', fetchContents)\n  const [addContent] = useMutation(addContentMutation, {\n    onSuccess: async () => {\n      message.success('Content Created Successfully', 3)\n      await queryCache.invalidateQueries('contents')\n    },\n  })\n  const [updateContent] = useMutation(updateContentMutation, {\n    onSuccess: async () => {\n      message.success('Content Updated Successfully', 3)\n      await queryCache.invalidateQueries('contents')\n    },\n  })\n  const [showCreateModal, setShowCreateModal] = useState(false)\n  const [showUpdateModal, setShowUpdateModal] = useState(false)\n  const [contentTitle, setContentTitle] = useState();\n  const [currentContent, setCurrentContent] = useState();\n  const [submitting, setSubmitting] = useState(false);\n  const handleCreate = async () => {\n    if (contentTitle) {\n      setSubmitting(true)\n      try {\n        await addContent({ title: contentTitle })\n        setShowCreateModal(false)\n        setSubmitting(false)\n        setContentTitle(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  const handleUpdate = async () => {\n    if (currentContent && currentContent.title) {\n      setSubmitting(true)\n      try {\n        await updateContent(currentContent)\n        setShowUpdateModal(false)\n        setSubmitting(false)\n        setCurrentContent(null)\n      } catch (e) {\n        message.error(e.message, 3)\n        setSubmitting(false)\n      }\n    }\n  }\n  return (\n    <>\n      <Row>\n        <Col flex=\"1\" style={{ padding: 25, background: '#ececec' }}>\n          <Title type=\"primary\" level={1} strong>Contents</Title>\n          <br />\n          <Button size=\"large\" type=\"primary\" onClick={() => setShowCreateModal(true)}>\n            <PlusOutlined /> Create Content\n          </Button>\n          <Row style={{ marginTop: 20 }}>\n            {\n              contents\n                ? contents.map(\n                  item => <Col span={8} key={item._id}>\n                    <Card\n                      style={{ width: 500, marginTop: 16 }}\n                      actions={[\n                        <><SettingOutlined key=\"rules\" onClick={() => history.push(`/contents/${item._id}`)} /> Rules</>,\n                        <><EditOutlined key=\"edit\" onClick={() => { setCurrentContent(item); setShowUpdateModal(true) }} />Edit</>\n                      ]}\n                    >\n                      <Avatar shape=\"circle\" size={100} src={item.image} />\n                      <h2 style={{ display: 'inline-block' }}>\n                        {item.title}\n                        <br />\n                        {\n                          item.rules && item.rules.length > 0\n                            ? <Tag color=\"green\"><strong>Rules Applied</strong></Tag>\n                            : <Tag color=\"red\"><strong>No Rules</strong></Tag>\n                        }\n                      </h2>\n                    </Card>\n                  </Col>\n                )\n                : <>\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                  <Skeleton active avatar paragraph={{ rows: 2 }} />\n                </>\n            }\n          </Row>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Create Content\"\n        visible={showCreateModal}\n        okText='Create'\n        onOk={handleCreate}\n        onCancel={() => setShowCreateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          <Input placeholder=\"Content Title\"\n            value={contentTitle}\n            onChange={e => setContentTitle(e.target.value)}\n          />\n        </Spin>\n      </Modal>\n      <Modal\n        title=\"Update Content\"\n        visible={showUpdateModal}\n        onOk={handleUpdate}\n        okText='Update'\n        onCancel={() => setShowUpdateModal(false)}\n      >\n        <Spin size=\"large\" spinning={submitting}>\n          {\n            currentContent\n              ? <Input placeholder=\"Content Title\"\n                value={currentContent.title}\n                onChange={e => { setCurrentContent({ ...currentContent, title: e.target.value }) }}\n              />\n              : ''\n          }\n        </Spin>\n      </Modal>\n    </>\n  )\n}\n\nexport default Contents\n","import React, { useState } from 'react'\nimport { List, Row, Switch, Col, Card, message, Skeleton, Spin, Typography, Divider, Result, Button, Space, PageHeader, Radio } from 'antd'\nimport RuleList from '../components/RuleList'\nimport { useParams, useHistory } from 'react-router';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { DeleteOutlined, FundViewOutlined } from '@ant-design/icons'\nimport RegionSelector from '../components/RegionSelector';\nimport { useQuery, useMutation, queryCache } from 'react-query';\nconst { Title, Text } = Typography\nconst fetchContent = async (_key, _id) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/contents/${_id}`)\n  return response.json()\n}\nconst updateContentMutation = async ({ _id, data }) => {\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/contents/${_id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  return response;\n}\nconst ConfigureContentRules = () => {\n  const history = useHistory();\n  const { _id } = useParams();\n  const { data: content, status } = useQuery(['getContent', _id], fetchContent, {enabled:_id})\n  const [updateContent] = useMutation(updateContentMutation, {\n    onSuccess: async () => {\n      message.success('Content Updated Successfully', 3)\n      await queryCache.invalidateQueries(['getContent', _id])\n      setUpdatingRules(false)\n    }\n  })\n  const [updatingRules, setUpdatingRules] = useState(false);\n  const [search, setSearch] = useState();\n  const [region, setRegion] = useState('5f22f961ab69d5439029b3e8');\n  const [lazy, setLazy] = useState(true)\n  const onRuleSelect = async (newRuleId) => {\n    // get current rule list , add this rule to that & update the content with it\n    const ruleIds = content.rules.map(({ _id }) => _id)\n    if (ruleIds.indexOf(newRuleId) === -1) {\n      setUpdatingRules(true)\n      ruleIds.push(newRuleId)\n      updateContent({_id, data: {rules: ruleIds}})\n    } else {\n      message.warn('The rule you are trying to apply, is already applied to this content', 5)\n    }\n  }\n  const onRuleRemove = async (ruleToRemove) => {\n    setUpdatingRules(true)\n    let ruleIds = content.rules.map(({ _id }) => _id)\n    ruleIds = ruleIds.filter(_id => _id !== ruleToRemove)\n    updateContent({_id, data: {rules: ruleIds}})\n  }\n  const updateRuleMatchType = async (ruleMatchType) => {\n    setUpdatingRules(true)\n    updateContent({_id, data: { ruleMatchType }})\n  }\n  return (\n    <>\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => history.push('/contents')}\n        title=\"Back\"\n        subTitle=\"Manage rules associated with content\"\n        extra={\n          (\n            <div style={{width: 200}}>\n              Currently Managing:  <RegionSelector {...{ region, setRegion }} />\n            </div>\n          )\n        }\n      >\n      </PageHeader>\n\n      <Row>\n        <Col span={12}>\n          <Card title=\"Content Details\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <Spin size=\"large\" spinning={status === 'loading'}>\n              {\n                content ?\n                  <>\n                    <Row>\n                      <Col span=\"6\">\n                        <Avatar shape=\"circle\" size={50} src={content.image} />\n                      </Col>\n                      <Col span=\"18\">\n                        <Title level={4} style={{ marginTop: 20 }}>{content.title}</Title>\n                      </Col>\n                    </Row>\n                    <Divider orientation=\"left\">Rules</Divider>\n                    {\n                      updatingRules\n                        ? <Skeleton active paragraph={{ rows: 20 }}></Skeleton>\n                        : content.rules && content.rules.length > 0\n                          ? <>\n                            <Text type=\"primary\" strong>Match Type</Text>\n                            <br />\n                            <Radio.Group\n                              options={[{ label: 'Match All', value: 'ALL' }, { label: 'Match Any', value: 'ANY' }]}\n                              onChange={e => updateRuleMatchType(e.target.value)}\n                              value={content.ruleMatchType}\n                              optionType=\"button\"\n                              buttonStyle=\"solid\"\n                            />\n                            <br />\n                            <List\n                              size=\"large\"\n                              bordered\n                              dataSource={content.rules}\n                              renderItem={\n                                item => <List.Item>\n                                  <Text>{item.title}</Text>\n                                  <Space>\n                                    <Button onClick={() => onRuleRemove(item._id)} title=\"Remove Rule\" type=\"danger\" shape=\"circle\" icon={<DeleteOutlined />} />\n                                    <Button onClick={() => setSearch(item.title)} type=\"primary\" icon={<FundViewOutlined />}>View Dteails</Button>\n                                  </Space>\n                                </List.Item>\n                              }\n                            />\n                          </>\n                          : <Result\n                            status=\"404\"\n                            title=\"No Rules Applied\"\n                            subTitle=\"Search rules from sidebar & click to apply\"\n                            extra={<Title level={4}>This content is visible to all by default!</Title>}\n                          />\n                    }\n                  </>\n                  : ''\n              }\n            </Spin>\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card title=\"Search & Apply Rules\" bordered style={{ width: '100%', minHeight: '80vh' }}>\n            <Switch checkedChildren=\"Search Only\" unCheckedChildren=\"Show All\" onChange={() => setLazy(!lazy) && setSearch(null)} />\n            <div style={{ height: '90vh', overflowY: 'auto' }}>\n              <RuleList search={search} region={region} lazy={lazy} clickAction={onRuleSelect}></RuleList>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ConfigureContentRules\n","import React from 'react'\nimport { useQuery } from 'react-query'\nimport { Spin, Row, Col, Card, Tag } from 'antd'\nimport Avatar from 'antd/lib/avatar/avatar'\nimport { Link } from 'react-router-dom'\n\nconst fetchContent = async (_key, userId) => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/targetted-contents/${userId}`)\n  return res.json()\n}\nfunction UserContents({ userId }) {\n  const { data: contents, status } = useQuery(['userContents', userId], fetchContent)\n  return (\n    <Spin size=\"large\" spinning={status === 'loading'}>\n      <Row gutter={3}>\n        {\n          contents ? contents.map((content) => {\n            return <Col span=\"6\" key={content._id}>\n              <Card bordered style={{ height: '100%', width: '100%', marginTop: 20 }}>\n                <Avatar shape=\"circle\" size={64} src={content.image} />\n                <h3 style={{ display: 'inline-block' }}>\n                  {content.title}\n                </h3>\n                <h3>\n                  {\n                    content.rules.map(rule => <Tag key={rule._id} color=\"green\">\n                      <Link to={`/rules/update/${rule._id}`}>\n                        <strong>RULE: {rule.title}</strong>\n                      </Link>\n                    </Tag>)\n                  }\n                </h3>\n              </Card>\n            </Col>\n          }) : ''\n        }\n      </Row>\n    </Spin>\n  )\n}\n\nexport default UserContents\n","import React, { useState } from 'react'\nimport { Select, Result } from 'antd'\n\nimport { useQuery } from 'react-query';\nimport UserDetails from '../components/UserDetails';\nimport UserContents from '../components/UserContents';\nconst { Option } = Select;\nconst fetchUsers = async () => {\n  const res = await fetch(`${process.env.REACT_APP_API_URL}/users`)\n  return res.json()\n}\nconst SimulateUserSession = () => {\n  const { data:userList } = useQuery('userList', fetchUsers)\n  const [currentUser, setCurrentUser] = useState()\n  const onUserSelect = (value) => {\n    setCurrentUser(userList.find(({_id}) => _id === value))\n  }\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <Select\n          loading={!userList}\n          value={currentUser && currentUser._id}\n          size='large'\n          showSearch\n          style={{ width: 200 }}\n          placeholder=\"Select a User\"\n          optionFilterProp=\"children\"\n          filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          }\n          onChange={onUserSelect}\n        >\n          {\n            userList && userList.map(user => <Option key={user._id} value={user._id}>{user.name}</Option>)\n          }\n        </Select>\n      </div>\n      <div>\n\n        {\n          currentUser\n            ? <>\n              <UserDetails user={currentUser} />\n              <UserContents userId={currentUser._id}/>\n            </>\n            : <Result\n              title=\"Please sign in as a User from above selector\"\n            />\n        }\n      </div>\n\n    </>\n  )\n}\n\nexport default SimulateUserSession\n","import React, { useEffect, useState } from 'react';\nimport { Layout, Menu, notification, Result } from 'antd';\nimport { GithubOutlined, ScheduleOutlined, UsergroupAddOutlined, LoginOutlined, PicLeftOutlined } from '@ant-design/icons';\nimport { NavLink, useLocation, Route, Switch, Redirect, Link } from 'react-router-dom';\nimport Rules from './pages/Rules';\nimport CreateUpdateRule from './pages/CreateUpdateRule';\nimport Users from './pages/Users';\nimport CreateUpdateUser from './pages/CreateUpdateUser';\nimport Contents from './pages/Contents';\nimport ConfigureContentRules from './pages/ConfigureContentRules';\nimport SimulateUserSession from './pages/SimulateUserSession';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [accepted, setAccepted] = useState(localStorage.getItem('termsAccepted'))\n  useEffect(() => {\n    if (!accepted) {\n      notification.warning({\n        message: <h2 style={{ color: '#FAB120' }}>Important Instructions</h2>,\n        duration: null,\n        description: (\n          <ul>\n            <li>All the data used is <strong>fictitious</strong></li>\n            <li>User & content image thumbnails are generated randomly & should not be associated with any kind of <strong>race/color/gender discrimination</strong></li>\n            <li>Available features are just for <strong>demo purpose</strong> & may differ from actual requirements</li>\n            <li>By <strong>clicking or closing</strong> this notification, you agree with above conditions!</li>\n          </ul>\n        ),\n        style: {\n          width: '100%'\n        },\n        onClick: () => {\n          setAccepted(true)\n          localStorage.setItem('termsAccepted', true)\n        },\n        onClose: () => {\n          setAccepted(true)\n          localStorage.setItem('termsAccepted', true)\n        }\n      });\n    }\n  }, [accepted])\n  const location = useLocation();\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Link to=\"/\">\n          <div className=\"logo\" >RULE ENGINE DEMO</div>\n        </Link>\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname,]}>\n          <Menu.Item key=\"/users\">\n            <NavLink to=\"/users\">\n              <UsergroupAddOutlined />\n              <strong>Users</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/rules\">\n            <NavLink to=\"/rules\">\n              <ScheduleOutlined />\n              <strong>Rules</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/contents\">\n            <NavLink to=\"/contents\">\n              <PicLeftOutlined />\n              <strong>Contents</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/simulate\">\n            <NavLink to=\"/simulate\">\n              <LoginOutlined />\n              <strong>Simulate User Session</strong>\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://github.com/rahulbhooteshwar/rule-engine-demo-client\">\n            <GithubOutlined /> <strong style={{color: 'orange'}}>UI</strong>\n            </a>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://github.com/rahulbhooteshwar/rule-engine-demo-server\">\n            <GithubOutlined /> <strong style={{color: 'orange'}}>API</strong>\n            </a>\n          </Menu.Item>\n          <Menu.Item style={{ float: \"right\" }}>\n            <a target=\"blank\" href=\"https://rahulbhooteshwar.github.io\">\n              Brought to you by: <strong style={{color: 'orange'}}>Rahul Bhooteshwar</strong>\n            </a>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content>\n        <div style={{ backgroundColor: 'white', minHeight: '100vh' }}>\n          {\n            accepted ?\n              <Switch>\n                <Route path=\"/simulate\">\n                  <SimulateUserSession />\n                </Route>\n                <Route path=\"/contents/:_id\">\n                  <ConfigureContentRules />\n                </Route>\n                <Route path=\"/contents\">\n                  <Contents />\n                </Route>\n                <Route path=\"/rules/create\">\n                  <CreateUpdateRule />\n                </Route>\n                <Route path=\"/rules/update/:_id\">\n                  <CreateUpdateRule />\n                </Route>\n                <Route path=\"/rules\">\n                  <Rules />\n                </Route>\n                <Route path=\"/users/create\">\n                  <CreateUpdateUser />\n                </Route>\n                <Route path=\"/users/update/:_id\">\n                  <CreateUpdateUser />\n                </Route>\n                <Route path=\"/users\">\n                  <Users />\n                </Route>\n                <Route path=\"/\">\n                  <Redirect to=\"/users\" />\n                </Route>\n              </Switch>\n\n              : <Result\n                style={{ paddingTop: 200 }}\n                status=\"500\"\n                title=\"Let's be clear at first place\"\n                subTitle=\"Read & Close the notification to continue.\"\n              />\n          }\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Rule Engine Demo ©2020 Created by <a target=\"blank\" href=\"https://rahulbhooteshwar.github.io\">Rahul Bhooteshwar</a></Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport { ReactQueryDevtools } from 'react-query-devtools';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ReactQueryDevtools initialIsOpen={false} />\n      <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}